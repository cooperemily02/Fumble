{"ast":null,"code":"'use strict';\n\nconst Aspect = require('./operation').Aspect;\n\nconst defineAspects = require('./operation').defineAspects;\n\nconst CommandOperation = require('./command');\n\nconst applyWriteConcern = require('../utils').applyWriteConcern;\n\nconst handleCallback = require('../utils').handleCallback;\n\nclass DropIndexOperation extends CommandOperation {\n  constructor(collection, indexName, options) {\n    super(collection.s.db, options, collection);\n    this.collection = collection;\n    this.indexName = indexName;\n  }\n\n  _buildCommand() {\n    const collection = this.collection;\n    const indexName = this.indexName;\n    const options = this.options;\n    let cmd = {\n      dropIndexes: collection.collectionName,\n      index: indexName\n    }; // Decorate command with writeConcern if supported\n\n    cmd = applyWriteConcern(cmd, {\n      db: collection.s.db,\n      collection\n    }, options);\n    return cmd;\n  }\n\n  execute(callback) {\n    // Execute command\n    super.execute((err, result) => {\n      if (typeof callback !== 'function') return;\n      if (err) return handleCallback(callback, err, null);\n      handleCallback(callback, null, result);\n    });\n  }\n\n}\n\ndefineAspects(DropIndexOperation, Aspect.WRITE_OPERATION);\nmodule.exports = DropIndexOperation;","map":null,"metadata":{},"sourceType":"script"}