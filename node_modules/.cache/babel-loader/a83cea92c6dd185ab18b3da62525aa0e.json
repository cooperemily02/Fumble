{"ast":null,"code":"'use strict';\n\nconst require_optional = require('require_optional');\n\nfunction debugOptions(debugFields, options) {\n  var finaloptions = {};\n  debugFields.forEach(function (n) {\n    finaloptions[n] = options[n];\n  });\n  return finaloptions;\n}\n\nfunction retrieveBSON() {\n  var BSON = require('bson');\n\n  BSON.native = false;\n\n  try {\n    var optionalBSON = require_optional('bson-ext');\n\n    if (optionalBSON) {\n      optionalBSON.native = true;\n      return optionalBSON;\n    }\n  } catch (err) {} // eslint-disable-line\n\n\n  return BSON;\n} // Throw an error if an attempt to use Snappy is made when Snappy is not installed\n\n\nfunction noSnappyWarning() {\n  throw new Error('Attempted to use Snappy compression, but Snappy is not installed. Install or disable Snappy compression and try again.');\n} // Facilitate loading Snappy optionally\n\n\nfunction retrieveSnappy() {\n  var snappy = null;\n\n  try {\n    snappy = require_optional('snappy');\n  } catch (error) {} // eslint-disable-line\n\n\n  if (!snappy) {\n    snappy = {\n      compress: noSnappyWarning,\n      uncompress: noSnappyWarning,\n      compressSync: noSnappyWarning,\n      uncompressSync: noSnappyWarning\n    };\n  }\n\n  return snappy;\n}\n\nmodule.exports = {\n  debugOptions,\n  retrieveBSON,\n  retrieveSnappy\n};","map":null,"metadata":{},"sourceType":"script"}