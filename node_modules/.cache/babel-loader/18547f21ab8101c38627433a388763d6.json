{"ast":null,"code":"'use strict';\n\nconst parseServerType = require('../core/sdam/server_description').parseServerType;\n\nconst RESPONSE_FIELDS = ['minWireVersion', 'maxWireVersion', 'maxBsonObjectSize', 'maxMessageSizeBytes', 'maxWriteBatchSize', '__nodejs_mock_server__'];\n\nclass StreamDescription {\n  constructor(address, options) {\n    this.address = address;\n    this.type = parseServerType(null);\n    this.minWireVersion = undefined;\n    this.maxWireVersion = undefined;\n    this.maxBsonObjectSize = 16777216;\n    this.maxMessageSizeBytes = 48000000;\n    this.maxWriteBatchSize = 100000;\n    this.compressors = options && options.compression && Array.isArray(options.compression.compressors) ? options.compression.compressors : [];\n  }\n\n  receiveResponse(response) {\n    this.type = parseServerType(response);\n    RESPONSE_FIELDS.forEach(field => {\n      if (typeof response[field] !== 'undefined') {\n        this[field] = response[field];\n      }\n    });\n\n    if (response.compression) {\n      this.compressor = this.compressors.filter(c => response.compression.indexOf(c) !== -1)[0];\n    }\n  }\n\n}\n\nmodule.exports = {\n  StreamDescription\n};","map":null,"metadata":{},"sourceType":"script"}