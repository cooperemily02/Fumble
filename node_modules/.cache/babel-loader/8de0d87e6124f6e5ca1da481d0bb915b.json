{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _framesync = require('framesync');\n\nvar _calc = require('../inc/calc');\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar Action = function () {\n  // lawsuit - sorry\n  function Action() {\n    var _this = this;\n\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Action);\n\n    this.scheduledUpdate = function () {\n      _this.lastUpdated = (0, _framesync.timeSinceLastFrame)();\n      _this.prev = _this.current;\n      var _props = _this.props,\n          onUpdate = _props.onUpdate,\n          passive = _props.passive;\n\n      if (_this.update) {\n        _this.current = _this.update(_this.current);\n      }\n\n      if (onUpdate) {\n        if (onUpdate.registerAction) {\n          onUpdate.set(_this.get());\n        } else {\n          onUpdate(_this.get(), _this);\n        }\n      }\n\n      _this.fireListeners();\n\n      if (!passive && _this._isActive) {\n        (0, _framesync.onFrameUpdate)(_this.scheduledUpdate);\n      }\n\n      if (_this.isActionComplete && _this.isActionComplete()) {\n        _this.complete();\n      }\n\n      return _this;\n    };\n\n    this.props = _extends({}, this.constructor.defaultProps);\n    this.setProps(props);\n    this.lastUpdated = 0;\n    this.prev = this.current = props.current || props.from || 0;\n  }\n\n  Action.prototype.start = function start() {\n    var _props2 = this.props,\n        onStart = _props2.onStart,\n        _onStart = _props2._onStart,\n        passive = _props2.passive;\n\n    if (!passive) {\n      this._isActive = true;\n      (0, _framesync.onFrameUpdate)(this.scheduledUpdate);\n    }\n\n    if (this.onStart) this.onStart();\n    if (onStart) onStart(this);\n    if (_onStart) _onStart(this);\n    return this;\n  };\n\n  Action.prototype.stop = function stop() {\n    var _props3 = this.props,\n        onStop = _props3.onStop,\n        _onStop = _props3._onStop,\n        passive = _props3.passive;\n\n    if (!passive) {\n      this._isActive = false;\n      (0, _framesync.cancelOnFrameUpdate)(this.scheduledUpdate);\n    }\n\n    if (this.onStop) this.onStop();\n    if (onStop) onStop(this);\n    if (_onStop) _onStop(this);\n    return this;\n  };\n\n  Action.prototype.complete = function complete() {\n    var _props4 = this.props,\n        onComplete = _props4.onComplete,\n        _onComplete = _props4._onComplete;\n    this.stop();\n    if (this.onComplete) this.onComplete();\n    if (onComplete) onComplete(this);\n    if (_onComplete) _onComplete(this);\n    return this;\n  };\n\n  Action.prototype.setProps = function setProps(_ref) {\n    var onUpdate = _ref.onUpdate,\n        props = _objectWithoutProperties(_ref, ['onUpdate']);\n\n    this.props = _extends({}, this.props, props);\n    if (onUpdate) this.output(onUpdate);\n    return this;\n  };\n\n  Action.prototype.output = function output(func) {\n    this.props.onUpdate = func;\n    if (func.registerAction) func.registerAction(this);\n    return this;\n  };\n\n  Action.prototype.get = function get() {\n    var transform = this.props.transform;\n    return transform ? transform(this.current) : this.current;\n  };\n\n  Action.prototype.getBeforeTransform = function getBeforeTransform() {\n    return this.current;\n  };\n\n  Action.prototype.set = function set(v) {\n    this.current = v;\n    return this;\n  };\n\n  Action.prototype.getProp = function getProp(key) {\n    return this.props[key];\n  };\n\n  Action.prototype.getVelocity = function getVelocity() {\n    return (0, _calc.speedPerSecond)(this.current - this.prev, this.lastUpdated);\n  };\n\n  Action.prototype.isActive = function isActive() {\n    return this._isActive;\n  };\n\n  Action.prototype.addListener = function addListener(listener) {\n    this.listeners = this.listeners || [];\n    this.numListeners = this.numListeners || 0;\n\n    if (this.listeners.indexOf(listener) === -1) {\n      this.listeners.push(listener);\n      this.numListeners++;\n    }\n\n    return this;\n  };\n\n  Action.prototype.removeListener = function removeListener(listener) {\n    var listenerIndex = this.listeners ? this.listeners.indexOf(listener) : -1;\n\n    if (listenerIndex !== -1) {\n      this.numListeners--;\n      this.listeners.splice(listenerIndex, 1);\n    }\n\n    return this;\n  };\n\n  Action.prototype.fireListeners = function fireListeners() {\n    var current = this.get();\n\n    for (var i = 0; i < this.numListeners; i++) {\n      this.listeners[i](current, this);\n    }\n\n    return this;\n  };\n\n  return Action;\n}();\n\nexports.default = Action;","map":{"version":3,"sources":["../../src/actions/index.js"],"names":["Action","props","start","onStart","_onStart","passive","stop","onStop","_onStop","complete","onComplete","_onComplete","onUpdate","setProps","output","func","get","transform","getBeforeTransform","set","v","getProp","key","getVelocity","isActive","addListener","listener","removeListener","listenerIndex","fireListeners","current","i"],"mappings":"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","sourcesContent":["import { onFrameUpdate, cancelOnFrameUpdate, timeSinceLastFrame } from 'framesync';\nimport { speedPerSecond } from '../inc/calc';\n\nclass Action { // lawsuit - sorry\n  constructor(props = {}) {\n    this.props = {\n      ...this.constructor.defaultProps\n    };\n\n    this.setProps(props);\n\n    this.lastUpdated = 0;\n    this.prev = this.current = props.current || props.from || 0;\n  }\n\n  start() {\n    const { onStart, _onStart, passive } = this.props;\n\n    if (!passive) {\n      this._isActive = true;\n      onFrameUpdate(this.scheduledUpdate);\n    }\n\n    if (this.onStart) this.onStart();\n    if (onStart) onStart(this);\n    if (_onStart) _onStart(this);\n\n    return this;\n  }\n\n  stop() {\n    const { onStop, _onStop, passive } = this.props;\n\n    if (!passive) {\n      this._isActive = false;\n      cancelOnFrameUpdate(this.scheduledUpdate);\n    }\n\n    if (this.onStop) this.onStop();\n    if (onStop) onStop(this);\n    if (_onStop) _onStop(this);\n\n    return this;\n  }\n\n  complete() {\n    const { onComplete, _onComplete } = this.props;\n\n    this.stop();\n\n    if (this.onComplete) this.onComplete();\n    if (onComplete) onComplete(this);\n    if (_onComplete) _onComplete(this);\n\n    return this;\n  }\n\n  scheduledUpdate = () => {\n    this.lastUpdated = timeSinceLastFrame();\n    this.prev = this.current;\n\n    const { onUpdate, passive } = this.props;\n\n    if (this.update) {\n      this.current = this.update(this.current);\n    }\n\n    if (onUpdate) {\n      if (onUpdate.registerAction) {\n        onUpdate.set(this.get());\n      } else {\n        onUpdate(this.get(), this);\n      }\n    }\n\n    this.fireListeners();\n\n    if (!passive && this._isActive) {\n      onFrameUpdate(this.scheduledUpdate);\n    }\n\n    if (this.isActionComplete && this.isActionComplete()) {\n      this.complete();\n    }\n\n    return this;\n  };\n\n  setProps({ onUpdate, ...props }) {\n    this.props = {\n      ...this.props,\n      ...props\n    };\n\n    if (onUpdate) this.output(onUpdate);\n\n    return this;\n  }\n\n  output(func) {\n    this.props.onUpdate = func;\n    if (func.registerAction) func.registerAction(this);\n\n    return this;\n  }\n\n  get() {\n    const { transform } = this.props;\n    return transform ? transform(this.current) : this.current;\n  }\n\n  getBeforeTransform() {\n    return this.current;\n  }\n\n  set(v) {\n    this.current = v;\n    return this;\n  }\n\n  getProp(key) {\n    return this.props[key];\n  }\n\n  getVelocity() {\n    return speedPerSecond(this.current - this.prev, this.lastUpdated);\n  }\n\n  isActive() {\n    return this._isActive;\n  }\n\n  addListener(listener) {\n    this.listeners = this.listeners || [];\n    this.numListeners = this.numListeners || 0;\n    if (this.listeners.indexOf(listener) === -1) {\n      this.listeners.push(listener);\n      this.numListeners++;\n    }\n    return this;\n  }\n\n  removeListener(listener) {\n    const listenerIndex = (this.listeners) ? this.listeners.indexOf(listener) : -1;\n    if (listenerIndex !== -1) {\n      this.numListeners--;\n      this.listeners.splice(listenerIndex, 1);\n    }\n    return this;\n  }\n\n  fireListeners() {\n    const current = this.get();\n    for (let i = 0; i < this.numListeners; i++) {\n      this.listeners[i](current, this);\n    }\n    return this;\n  }\n}\n\nexport default Action;\n"]},"metadata":{},"sourceType":"script"}