{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _chain = require('./chain');\n\nvar _chain2 = _interopRequireDefault(_chain);\n\nvar _parallel = require('./parallel');\n\nvar _parallel2 = _interopRequireDefault(_parallel);\n\nvar _delay = require('./delay');\n\nvar _delay2 = _interopRequireDefault(_delay);\n\nvar _utils = require('../inc/utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Creates a new parallel Action composed of chained\n * delay and actions. Interval can be either a number\n * to multiply by `i` or a function that will be provided `i`\n *\n * Straight cribbed from https://github.com/facebook/react-native/blob/24c72f513e48f0bdc40820b43262328fe2c301d4/Libraries/Animated/src/AnimatedImplementation.js#L2031\n * ^ This function sold a previously-conflicted me on the merit of moving from\n * jQuery-style multi-property animations to single-property.\n * @param  {array} actions\n * @param  {function | number} interval\n * @return {Action}\n */\n\n\nexports.default = function (actions, interval, onComplete) {\n  var intervalIsFunction = (0, _utils.isFunc)(interval);\n  return (0, _parallel2.default)(actions.map(function (action, i) {\n    var timeToDelay = intervalIsFunction ? interval(i) : i * interval;\n    return (0, _chain2.default)([(0, _delay2.default)(timeToDelay), action]);\n  }), {\n    onComplete: onComplete\n  });\n};","map":{"version":3,"sources":["../../src/actions/stagger.js"],"names":["intervalIsFunction","timeToDelay","interval","i","onComplete"],"mappings":";;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;;;;;;AAEA;;;;;;;;;;;;;;kBAYe,UAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAmC;AAChD,MAAMA,kBAAAA,GAAqB,CAAA,GAAA,MAAA,CAAA,MAAA,EAA3B,QAA2B,CAA3B;AAEA,SAAO,CAAA,GAAA,UAAA,CAAA,OAAA,EAAS,OAAA,CAAA,GAAA,CAAY,UAAA,MAAA,EAAA,CAAA,EAAe;AACzC,QAAMC,WAAAA,GAAeD,kBAAD,GAAuBE,QAAAA,CAAvB,CAAuBA,CAAvB,GAAqCC,CAAAA,GAAzD,QAAA;AACA,WAAO,CAAA,GAAA,OAAA,CAAA,OAAA,EAAM,CACX,CAAA,GAAA,OAAA,CAAA,OAAA,EADW,WACX,CADW,EAAb,MAAa,CAAN,CAAP;AAFK,GAAS,CAAT,EAMH;AAAEC,IAAAA,UAAAA,EANN;AAMI,GANG,CAAP","sourcesContent":["import chain from './chain';\nimport parallel from './parallel';\nimport delay from './delay';\nimport { isFunc } from '../inc/utils';\n\n/**\n * Creates a new parallel Action composed of chained\n * delay and actions. Interval can be either a number\n * to multiply by `i` or a function that will be provided `i`\n *\n * Straight cribbed from https://github.com/facebook/react-native/blob/24c72f513e48f0bdc40820b43262328fe2c301d4/Libraries/Animated/src/AnimatedImplementation.js#L2031\n * ^ This function sold a previously-conflicted me on the merit of moving from\n * jQuery-style multi-property animations to single-property.\n * @param  {array} actions\n * @param  {function | number} interval\n * @return {Action}\n */\nexport default (actions, interval, onComplete) => {\n  const intervalIsFunction = isFunc(interval);\n\n  return parallel(actions.map((action, i) => {\n    const timeToDelay = (intervalIsFunction) ? interval(i) : i * interval;\n    return chain([\n      delay(timeToDelay),\n      action\n    ]);\n  }), { onComplete });\n};\n"]},"metadata":{},"sourceType":"script"}