{"ast":null,"code":"'use strict';\n\nconst CommandOperationV2 = require('./command_v2');\n\nconst Aspect = require('./operation').Aspect;\n\nconst defineAspects = require('./operation').defineAspects;\n\nconst maxWireVersion = require('../core/utils').maxWireVersion;\n\nconst LIST_INDEXES_WIRE_VERSION = 3;\n\nclass ListIndexesOperation extends CommandOperationV2 {\n  constructor(collection, options) {\n    super(collection, options, {\n      fullResponse: true\n    });\n    this.collectionNamespace = collection.s.namespace;\n  }\n\n  execute(server, callback) {\n    const serverWireVersion = maxWireVersion(server);\n\n    if (serverWireVersion < LIST_INDEXES_WIRE_VERSION) {\n      const systemIndexesNS = this.collectionNamespace.withCollection('system.indexes').toString();\n      const collectionNS = this.collectionNamespace.toString();\n      server.query(systemIndexesNS, {\n        query: {\n          ns: collectionNS\n        }\n      }, {}, this.options, callback);\n      return;\n    }\n\n    const cursor = this.options.batchSize ? {\n      batchSize: this.options.batchSize\n    } : {};\n    super.executeCommand(server, {\n      listIndexes: this.collectionNamespace.collection,\n      cursor\n    }, callback);\n  }\n\n}\n\ndefineAspects(ListIndexesOperation, [Aspect.READ_OPERATION, Aspect.RETRYABLE, Aspect.EXECUTE_WITH_SELECTION]);\nmodule.exports = ListIndexesOperation;","map":null,"metadata":{},"sourceType":"script"}