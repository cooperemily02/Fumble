{"ast":null,"code":"'use strict';\n\nconst Aspect = require('./operation').Aspect;\n\nconst CommandOperation = require('./command');\n\nconst defineAspects = require('./operation').defineAspects;\n\nconst handleCallback = require('../utils').handleCallback;\n\nconst WriteConcern = require('../write_concern');\n\nclass RemoveUserOperation extends CommandOperation {\n  constructor(db, username, options) {\n    const commandOptions = {};\n    const writeConcern = WriteConcern.fromOptions(options);\n\n    if (writeConcern != null) {\n      commandOptions.writeConcern = writeConcern;\n    }\n\n    if (options.dbName) {\n      commandOptions.dbName = options.dbName;\n    } // Add maxTimeMS to options if set\n\n\n    if (typeof options.maxTimeMS === 'number') {\n      commandOptions.maxTimeMS = options.maxTimeMS;\n    }\n\n    super(db, commandOptions);\n    this.username = username;\n  }\n\n  _buildCommand() {\n    const username = this.username; // Build the command to execute\n\n    const command = {\n      dropUser: username\n    };\n    return command;\n  }\n\n  execute(callback) {\n    // Attempt to execute command\n    super.execute((err, result) => {\n      if (err) return handleCallback(callback, err, null);\n      handleCallback(callback, err, result.ok ? true : false);\n    });\n  }\n\n}\n\ndefineAspects(RemoveUserOperation, Aspect.WRITE_OPERATION);\nmodule.exports = RemoveUserOperation;","map":null,"metadata":{},"sourceType":"script"}