{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\skyle\\\\github\\\\Fumble\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\skyle\\\\github\\\\Fumble\\\\src\\\\examples\\\\Simple.js\";\nimport React, { useState } from 'react'; // import TinderCard from '../react-tinder-card/index'\n\nimport TinderCard from 'react-tinder-card';\nconst db = [{\n  name: 'Taco Bell',\n  url: './img/richard.jpg',\n  price: 1\n}, {\n  name: 'Olive Garden',\n  url: './img/erlich.jpg',\n  price: 2\n}, {\n  name: 'Chipotle',\n  url: './img/monica.jpg',\n  price: 3\n}, {\n  name: 'Dominoes',\n  url: './img/jared.jpg',\n  price: 4\n}, {\n  name: 'Wawa',\n  url: './img/dinesh.jpg',\n  price: 5\n}];\nvar swipedRight = [];\nvar swipes = 0;\n\nfunction Simple() {\n  const characters = db;\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        lastDirection = _useState2[0],\n        setLastDirection = _useState2[1];\n\n  const swiped = (direction, nameToDelete) => {\n    if (direction === 'right') {\n      swipes++;\n      swipedRight.push(nameToDelete);\n      var length = swipedRight.length;\n      console.log(swipedRight);\n      console.log('Test'); // give users a minimum number of swipes before giving them the best deal\n\n      if (swipes === 2) {\n        console.log('done');\n      }\n    } // const toBeRemoved = cardsLeft[cardsLeft.length - 1].name // Find the card object to be removed\n    // const index = db.map(person => person.name).indexOf(toBeRemoved) // Find the index of which to make the reference to\n    // alreadyRemoved.push(toBeRemoved) // Make sure the next card gets removed next time if this card do not have time to exit the screen\n    // childRefs[index].current.swipe(dir) // Swipe the card!\n\n\n    console.log('removing: ' + nameToDelete);\n    setLastDirection(direction);\n  };\n\n  const outOfFrame = name => {\n    console.log(name + ' left the screen!');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Damion&display=swap\",\n    rel: \"stylesheet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Alatsi&display=swap\",\n    rel: \"stylesheet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"link\", {\n    href: \"https://fonts.googleapis.com/css2?family=Staatliches&display=swap\",\n    rel: \"stylesheet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Swipe right on your fave deals!\"), React.createElement(\"div\", {\n    className: \"cardContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, characters.map(character => React.createElement(TinderCard, {\n    className: \"swipe\",\n    key: character.name,\n    onSwipe: dir => swiped(dir, character.name),\n    onCardLeftScreen: () => outOfFrame(character.name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      backgroundImage: 'url(' + character.url + ')'\n    },\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, character.name, \" \", character.price))))), lastDirection ? React.createElement(\"h2\", {\n    className: \"infoText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"You swiped \", lastDirection) : React.createElement(\"h2\", {\n    className: \"infoText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }));\n}\n\nexport default Simple;","map":{"version":3,"sources":["C:/Users/skyle/github/Fumble/src/examples/Simple.js"],"names":["React","useState","TinderCard","db","name","url","price","swipedRight","swipes","Simple","characters","lastDirection","setLastDirection","swiped","direction","nameToDelete","push","length","console","log","outOfFrame","map","character","dir","backgroundImage"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\n// import TinderCard from '../react-tinder-card/index'\r\nimport TinderCard from 'react-tinder-card'\r\n\r\nconst db = [\r\n  {\r\n    name: 'Taco Bell',\r\n    url: './img/richard.jpg',\r\n    price: 1\r\n  },\r\n  {\r\n    name: 'Olive Garden',\r\n    url: './img/erlich.jpg',\r\n    price: 2\r\n  },\r\n  {\r\n    name: 'Chipotle',\r\n    url: './img/monica.jpg',\r\n    price: 3\r\n  },\r\n  {\r\n    name: 'Dominoes',\r\n    url: './img/jared.jpg',\r\n    price: 4\r\n  },\r\n  {\r\n    name: 'Wawa',\r\n    url: './img/dinesh.jpg',\r\n    price: 5\r\n  }\r\n]\r\n\r\nvar swipedRight = []\r\nvar swipes = 0\r\nfunction Simple () {\r\n  const characters = db\r\n\r\n  const [lastDirection, setLastDirection] = useState()\r\n\r\n\r\n  const swiped = (direction, nameToDelete) => {\r\n      if(direction === 'right'){\r\n        swipes++\r\n        swipedRight.push(nameToDelete)\r\n        var length = swipedRight.length\r\n        console.log(swipedRight)\r\n        console.log('Test')\r\n        // give users a minimum number of swipes before giving them the best deal\r\n        if(swipes === 2) {\r\n          console.log('done')\r\n        }\r\n      }\r\n      // const toBeRemoved = cardsLeft[cardsLeft.length - 1].name // Find the card object to be removed\r\n      // const index = db.map(person => person.name).indexOf(toBeRemoved) // Find the index of which to make the reference to\r\n      // alreadyRemoved.push(toBeRemoved) // Make sure the next card gets removed next time if this card do not have time to exit the screen\r\n      // childRefs[index].current.swipe(dir) // Swipe the card!\r\n    console.log('removing: ' + nameToDelete)\r\n    setLastDirection(direction)\r\n  }\r\n\r\n  const outOfFrame = (name) => {\r\n    console.log(name + ' left the screen!')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <link href='https://fonts.googleapis.com/css?family=Damion&display=swap' rel='stylesheet' />\r\n      <link href='https://fonts.googleapis.com/css?family=Alatsi&display=swap' rel='stylesheet' />\r\n      <link href='https://fonts.googleapis.com/css2?family=Staatliches&display=swap' rel='stylesheet' />\r\n      <h1>Swipe right on your fave deals!</h1>\r\n      <div className='cardContainer'>\r\n        {characters.map((character) =>\r\n          <TinderCard className='swipe' key={character.name} onSwipe={(dir) => swiped(dir, character.name)} onCardLeftScreen={() => outOfFrame(character.name)}>\r\n            <div style={{ backgroundImage: 'url(' + character.url + ')' }} className='card'>\r\n              <h2>{character.name} {character.price}</h2>\r\n            </div>\r\n          </TinderCard>\r\n        )}\r\n      </div>\r\n      {lastDirection ? <h2 className='infoText'>You swiped {lastDirection}</h2> : <h2 className='infoText' />}\r\n    </div>\r\n  ) \r\n}\r\n\r\nexport default Simple\r\n"]},"metadata":{},"sourceType":"module"}