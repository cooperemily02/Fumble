{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.cubicBezier = exports.anticipate = exports.createAnticipateEasing = exports.backInOut = exports.backOut = exports.backIn = exports.createBackIn = exports.circInOut = exports.circOut = exports.circIn = exports.easeInOut = exports.easeOut = exports.easeIn = exports.createExpoIn = exports.linear = exports.createMirroredEasing = exports.createReversedEasing = undefined;\n\nvar _transformers = require('./transformers');\n\nvar DEFAULT_OVERSHOOT_STRENGTH = 1.525;\n\nvar createReversedEasing = exports.createReversedEasing = function createReversedEasing(easing) {\n  return function (p) {\n    return 1 - easing(1 - p);\n  };\n};\n\nvar createMirroredEasing = exports.createMirroredEasing = function createMirroredEasing(easing) {\n  return function (p) {\n    return p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n  };\n};\n\nvar linear = exports.linear = function linear(p) {\n  return p;\n};\n\nvar createExpoIn = exports.createExpoIn = function createExpoIn(power) {\n  return function (p) {\n    return Math.pow(p, power);\n  };\n};\n\nvar easeIn = exports.easeIn = createExpoIn(2);\nvar easeOut = exports.easeOut = createReversedEasing(easeIn);\nvar easeInOut = exports.easeInOut = createMirroredEasing(easeIn);\n\nvar circIn = exports.circIn = function circIn(p) {\n  return 1 - Math.sin(Math.acos(p));\n};\n\nvar circOut = exports.circOut = createReversedEasing(circIn);\nvar circInOut = exports.circInOut = createMirroredEasing(circOut);\n\nvar createBackIn = exports.createBackIn = function createBackIn(power) {\n  return function (p) {\n    return p * p * ((power + 1) * p - power);\n  };\n};\n\nvar backIn = exports.backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nvar backOut = exports.backOut = createReversedEasing(backIn);\nvar backInOut = exports.backInOut = createMirroredEasing(backIn);\n\nvar createAnticipateEasing = exports.createAnticipateEasing = function createAnticipateEasing(power) {\n  var backEasing = createBackIn(power);\n  return function (p) {\n    return (p *= 2) < 1 ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n  };\n};\n\nvar anticipate = exports.anticipate = createAnticipateEasing(DEFAULT_OVERSHOOT_STRENGTH);\n\nvar cubicBezier = exports.cubicBezier = function cubicBezier(x1, y1, x2, y2) {\n  var xBezier = (0, _transformers.bezier)(0, x1, x2, 1);\n  var yBezier = (0, _transformers.bezier)(0, y1, y2, 1);\n  return function (t) {\n    return yBezier(xBezier(t));\n  };\n};","map":{"version":3,"sources":["../../src/inc/easing.js"],"names":["DEFAULT_OVERSHOOT_STRENGTH","createReversedEasing","easing","createMirroredEasing","p","linear","createExpoIn","easeIn","easeOut","easeInOut","circIn","Math","circOut","circInOut","createBackIn","power","backIn","backOut","backInOut","createAnticipateEasing","backEasing","anticipate","cubicBezier","xBezier","yBezier"],"mappings":";;;;;AAAA,IAAA,aAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAEA,IAAMA,0BAAAA,GAAN,KAAA;;AAEO,IAAMC,oBAAAA,GAAAA,OAAAA,CAAAA,oBAAAA,GAAuB,SAAvBA,oBAAuB,CAAA,MAAA,EAAA;AAAA,SAAY,UAAA,CAAA,EAAA;AAAA,WAAO,IAAIC,MAAAA,CAAO,IAAlB,CAAWA,CAAX;AAAZ,GAAA;AAA7B,CAAA;;AACA,IAAMC,oBAAAA,GAAAA,OAAAA,CAAAA,oBAAAA,GAAuB,SAAvBA,oBAAuB,CAAA,MAAA,EAAA;AAAA,SAAY,UAAA,CAAA,EAAA;AAAA,WAAQC,CAAAA,IAAD,GAACA,GAAYF,MAAAA,CAAO,IAAPA,CAAAA,CAAAA,GAAb,CAACE,GAAgC,CAAC,IAAIF,MAAAA,CAAO,KAAK,IAAjB,CAAY,CAAPA,CAAL,IAAxC,CAAA;AAAZ,GAAA;AAA7B,CAAA;;AAEA,IAAMG,MAAAA,GAAAA,OAAAA,CAAAA,MAAAA,GAAS,SAATA,MAAS,CAAA,CAAA,EAAA;AAAA,SAAA,CAAA;AAAf,CAAA;;AAEA,IAAMC,YAAAA,GAAAA,OAAAA,CAAAA,YAAAA,GAAe,SAAfA,YAAe,CAAA,KAAA,EAAA;AAAA,SAAW,UAAA,CAAA,EAAA;AAAA,WAAA,IAAA,CAAA,GAAA,CAAA,CAAA,EAAA,KAAA,CAAA;AAAX,GAAA;AAArB,CAAA;;AACA,IAAMC,MAAAA,GAAAA,OAAAA,CAAAA,MAAAA,GAASD,YAAAA,CAAf,CAAeA,CAAf;AACA,IAAME,OAAAA,GAAAA,OAAAA,CAAAA,OAAAA,GAAUP,oBAAAA,CAAhB,MAAgBA,CAAhB;AACA,IAAMQ,SAAAA,GAAAA,OAAAA,CAAAA,SAAAA,GAAYN,oBAAAA,CAAlB,MAAkBA,CAAlB;;AAEA,IAAMO,MAAAA,GAAAA,OAAAA,CAAAA,MAAAA,GAAS,SAATA,MAAS,CAAA,CAAA,EAAA;AAAA,SAAO,IAAIC,IAAAA,CAAAA,GAAAA,CAASA,IAAAA,CAAAA,IAAAA,CAApB,CAAoBA,CAATA,CAAX;AAAf,CAAA;;AACA,IAAMC,OAAAA,GAAAA,OAAAA,CAAAA,OAAAA,GAAUX,oBAAAA,CAAhB,MAAgBA,CAAhB;AACA,IAAMY,SAAAA,GAAAA,OAAAA,CAAAA,SAAAA,GAAYV,oBAAAA,CAAlB,OAAkBA,CAAlB;;AAEA,IAAMW,YAAAA,GAAAA,OAAAA,CAAAA,YAAAA,GAAe,SAAfA,YAAe,CAAA,KAAA,EAAA;AAAA,SAAW,UAAA,CAAA,EAAA;AAAA,WAAQV,CAAAA,GAAD,CAACA,IAAU,CAACW,KAAAA,GAAD,CAAA,IAAA,CAAA,GAAlB,KAAQX,CAAR;AAAX,GAAA;AAArB,CAAA;;AACA,IAAMY,MAAAA,GAAAA,OAAAA,CAAAA,MAAAA,GAASF,YAAAA,CAAf,0BAAeA,CAAf;AACA,IAAMG,OAAAA,GAAAA,OAAAA,CAAAA,OAAAA,GAAUhB,oBAAAA,CAAhB,MAAgBA,CAAhB;AACA,IAAMiB,SAAAA,GAAAA,OAAAA,CAAAA,SAAAA,GAAYf,oBAAAA,CAAlB,MAAkBA,CAAlB;;AAEA,IAAMgB,sBAAAA,GAAAA,OAAAA,CAAAA,sBAAAA,GAAyB,SAAzBA,sBAAyB,CAAA,KAAA,EAAW;AAC/C,MAAMC,UAAAA,GAAaN,YAAAA,CAAnB,KAAmBA,CAAnB;AACA,SAAO,UAAA,CAAA,EAAA;AAAA,WAAQ,CAACV,CAAAA,IAAD,CAAA,IAAD,CAAC,GAAgB,MAAMgB,UAAAA,CAAvB,CAAuBA,CAAtB,GAAsC,OAAO,IAAIT,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,EAAY,CAAA,EAAA,IAAOP,CAAAA,GAA5E,CAAqE,CAAZO,CAAX,CAA9C;AAAP,GAAA;AAFK,CAAA;;AAKA,IAAMU,UAAAA,GAAAA,OAAAA,CAAAA,UAAAA,GAAaF,sBAAAA,CAAnB,0BAAmBA,CAAnB;;AAEA,IAAMG,WAAAA,GAAAA,OAAAA,CAAAA,WAAAA,GAAc,SAAdA,WAAc,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAoB;AAC7C,MAAMC,OAAAA,GAAU,CAAA,GAAA,aAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAhB,CAAgB,CAAhB;AACA,MAAMC,OAAAA,GAAU,CAAA,GAAA,aAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAhB,CAAgB,CAAhB;AAEA,SAAO,UAAA,CAAA,EAAA;AAAA,WAAOA,OAAAA,CAAQD,OAAAA,CAAf,CAAeA,CAARC,CAAP;AAAP,GAAA;AAJK,CAAA","sourcesContent":["import { bezier } from './transformers';\n\nconst DEFAULT_OVERSHOOT_STRENGTH = 1.525;\n\nexport const createReversedEasing = (easing) => (p) => 1 - easing(1 - p);\nexport const createMirroredEasing = (easing) => (p) => (p <= 0.5) ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport const linear = (p) => p;\n\nexport const createExpoIn = (power) => (p) => p ** power;\nexport const easeIn = createExpoIn(2);\nexport const easeOut = createReversedEasing(easeIn);\nexport const easeInOut = createMirroredEasing(easeIn);\n\nexport const circIn = (p) => 1 - Math.sin(Math.acos(p));\nexport const circOut = createReversedEasing(circIn);\nexport const circInOut = createMirroredEasing(circOut);\n\nexport const createBackIn = (power) => (p) => (p * p) * ((power + 1) * p - power);\nexport const backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH);\nexport const backOut = createReversedEasing(backIn);\nexport const backInOut = createMirroredEasing(backIn);\n\nexport const createAnticipateEasing = (power) => {\n  const backEasing = createBackIn(power);\n  return (p) => ((p *= 2) < 1) ? 0.5 * backEasing(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n};\n\nexport const anticipate = createAnticipateEasing(DEFAULT_OVERSHOOT_STRENGTH);\n\nexport const cubicBezier = (x1, y1, x2, y2) => {\n  const xBezier = bezier(0, x1, x2, 1);\n  const yBezier = bezier(0, y1, y2, 1);\n\n  return (t) => yBezier(xBezier(t));\n};\n"]},"metadata":{},"sourceType":"script"}