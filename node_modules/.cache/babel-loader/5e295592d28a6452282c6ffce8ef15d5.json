{"ast":null,"code":"var _jsxFileName = \"/Users/aramaswamy/Desktop/Fumble/src/examples/Simple.js\";\nimport React, { useState, useEffect } from 'react'; // import TinderCard from '../react-tinder-card/index'\n\nimport TinderCard from 'react-tinder-card';\nimport ReactDOM from 'react-dom';\n\nconst MongoClient = require('mongodb').MongoClient; //MongoClient.connect('mongodb+srv://shambhavir:Success2021!!@cluster0.xrzxq.mongodb.net/fumble?retryWrites=true&w=majority'\n\n\nconst db = [{\n  name: 'Taco Bell',\n  url: './img/richard.jpg',\n  weight: 1\n}, {\n  name: 'Olive Garden',\n  url: './img/erlich.jpg',\n  price: 2\n}, {\n  name: 'Chipotle',\n  url: './img/monica.jpg',\n  price: 3\n}, {\n  name: 'Dominoes',\n  url: './img/jared.jpg',\n  price: 4\n}, {\n  name: 'Wawa',\n  url: './img/dinesh.jpg',\n  price: 5\n}, {\n  name: 'comfort food',\n  type: 'category'\n}]; // function callAPI () {\n//   if (true) {\n//     fetch('https://api.geoapify.com/v2/places?categories=commercial.food_and_drink&filter=circle:-72.519867,42.375801,5000&limit=20&apiKey=1af6a8fa67c94cba9c73377e2866a995').then(function (response) {\n//       return response.json();\n//     }).then(function (result) {\n//       for(var i = 0; i<result.features.length; i++){\n//         arrayofplaces.push({name: result.features[i].properties.name, url: './img/richard.jpg', price: 1})\n//       }\n//     });\n//   }\n// }\n\nvar swipedRight = [];\nvar currentChoices = [0, 0, 0, 0];\nvar swipes = 0;\n\nfunction Simple() {\n  var temparray = [];\n  const [arrayofplaces, setarray] = useState([{\n    name: 'No Name',\n    url: './img/richard.jpg',\n    price: 1\n  }]);\n  useEffect(() => {\n    fetch('https://api.discountapi.com/v2/deals?category_slugs=restaurants&api_key=KiyYblAt').then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      for (var i = 0; i < result.features.length; i++) {\n        temparray.push({\n          name: result.features[i].properties.name,\n          url: './img/richard.jpg',\n          price: 1\n        });\n      }\n\n      setarray(temparray);\n    });\n  }); // const arrayofplaces = useState([])\n  // callAPI(() =>{\n  //   fetch('https://api.geoapify.com/v2/places?categories=commercial.food_and_drink&filter=circle:-72.519867,42.375801,5000&limit=20&apiKey=1af6a8fa67c94cba9c73377e2866a995').then(function (response) {\n  //     return response.json();\n  //   }).then(function (result) {\n  //     for(var i = 0; i<result.features.length; i++){\n  //       arrayofplaces.push({name: result.features[i].properties.name, url: './img/richard.jpg', price: 1})\n  //     }\n  //   });\n  // }, []);\n  // console.log(arrayofplaces)\n  // const characters = db\n\n  const [lastDirection, setLastDirection] = useState(); // var characters = []\n  // characters = arrayofplaces\n\n  const swiped = (direction, nameToDelete) => {\n    if (direction === 'right') {\n      swipes++;\n      swipedRight.push(nameToDelete);\n      var length = swipedRight.length;\n      console.log(swipedRight);\n      console.log('Test'); // give users a minimum number of swipes before giving them the best deal\n      // var i = 0\n      // while(i < 4)\n      // {\n      //   swipes++\n      //   swipedRight.push(nameToDelete)\n      //   var length = swipedRight.length\n      //   //console.log(swipedRight)\n      //   //console.log('Test')\n      //   currentChoices[i] = db.price \n      //   i++; \n      // }\n      // for(i = 0; i < currentChoices.length; i++)\n      //   console.log(currentChoices[i]); \n\n      if (swipes === 2) {\n        console.log('done');\n      }\n    } // const toBeRemoved = cardsLeft[cardsLeft.length - 1].name // Find the card object to be removed\n    // const index = db.map(person => person.name).indexOf(toBeRemoved) // Find the index of which to make the reference to\n    // alreadyRemoved.push(toBeRemoved) // Make sure the next card gets removed next time if this card do not have time to exit the screen\n    // childRefs[index].current.swipe(dir) // Swipe the card!\n\n\n    console.log('removing: ' + nameToDelete);\n    setLastDirection(direction);\n  };\n\n  const outOfFrame = name => {\n    console.log(name + ' left the screen!');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"readable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Damion&display=swap\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Alatsi&display=swap\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"link\", {\n    href: \"https://fonts.googleapis.com/css2?family=Staatliches&display=swap\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, \"Swipe right on your fave deals!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cardContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, arrayofplaces.map(place => /*#__PURE__*/React.createElement(TinderCard, {\n    className: \"swipe\",\n    key: place.name,\n    onSwipe: dir => swiped(dir, place.name),\n    onCardLeftScreen: () => outOfFrame(place.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundImage: 'url(' + place.url + ')'\n    },\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, place.name, \" \", place.price))))), lastDirection ? /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"infoText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 24\n    }\n  }, \"You swiped \", lastDirection) : /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"infoText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 83\n    }\n  })); // return (\n  //   <div className='readable'>\n  //     <link href='https://fonts.googleapis.com/css?family=Damion&display=swap' rel='stylesheet' />\n  //     <link href='https://fonts.googleapis.com/css?family=Alatsi&display=swap' rel='stylesheet' />\n  //     <link href='https://fonts.googleapis.com/css2?family=Staatliches&display=swap' rel='stylesheet' />\n  //     <h1>Swipe right on your fave deals!</h1>\n  //     <div className='cardContainer'>\n  //       {characters.map((charact) =>\n  //         <TinderCard className='swipe' key={place.name} onSwipe={(dir) => swiped(dir, place.name)} onCardLeftScreen={() => outOfFrame(place.name)}>\n  //           <div style={{ backgroundImage: 'url(' + place.url + ')' }} className='card'>\n  //             <h2>{place.name} {place.sprice}</h2>\n  //           </div>\n  //         </TinderCard>\n  //       )}\n  //     </div>\n  //     {lastDirection ? <h2 className='infoText'>You swiped {lastDirection}</h2> : <h2 className='infoText' />}\n  //   </div>\n  // ) \n}\n\nexport default Simple;","map":{"version":3,"sources":["/Users/aramaswamy/Desktop/Fumble/src/examples/Simple.js"],"names":["React","useState","useEffect","TinderCard","ReactDOM","MongoClient","require","db","name","url","weight","price","type","swipedRight","currentChoices","swipes","Simple","temparray","arrayofplaces","setarray","fetch","then","response","json","result","i","features","length","push","properties","lastDirection","setLastDirection","swiped","direction","nameToDelete","console","log","outOfFrame","map","place","dir","backgroundImage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n// import TinderCard from '../react-tinder-card/index'\nimport TinderCard from 'react-tinder-card'\nimport ReactDOM from 'react-dom';\nconst MongoClient = require('mongodb').MongoClient\n//MongoClient.connect('mongodb+srv://shambhavir:Success2021!!@cluster0.xrzxq.mongodb.net/fumble?retryWrites=true&w=majority'\nconst db = [\n  {\n    name: 'Taco Bell',\n    url: './img/richard.jpg',\n    weight: 1\n  },\n  {\n    name: 'Olive Garden',\n    url: './img/erlich.jpg',\n    price: 2\n  },\n  {\n    name: 'Chipotle',\n    url: './img/monica.jpg',\n    price: 3\n  },\n  {\n    name: 'Dominoes',\n    url: './img/jared.jpg',\n    price: 4\n  },\n  {\n    name: 'Wawa',\n    url: './img/dinesh.jpg',\n    price: 5\n  },\n  {\n    name: 'comfort food',\n    type: 'category'\n  }\n]\n\n// function callAPI () {\n//   if (true) {\n//     fetch('https://api.geoapify.com/v2/places?categories=commercial.food_and_drink&filter=circle:-72.519867,42.375801,5000&limit=20&apiKey=1af6a8fa67c94cba9c73377e2866a995').then(function (response) {\n//       return response.json();\n//     }).then(function (result) {\n//       for(var i = 0; i<result.features.length; i++){\n//         arrayofplaces.push({name: result.features[i].properties.name, url: './img/richard.jpg', price: 1})\n//       }\n//     });\n//   }\n// }\n\nvar swipedRight = []\nvar currentChoices = [0, 0, 0, 0] \nvar swipes = 0\nfunction Simple () {\n  var temparray = []\n  const [arrayofplaces, setarray] = useState([{name: 'No Name', url: './img/richard.jpg', price: 1}])\n  useEffect(() => {\n    fetch('https://api.discountapi.com/v2/deals?category_slugs=restaurants&api_key=KiyYblAt').then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      for(var i = 0; i<result.features.length; i++){\n        temparray.push({name: result.features[i].properties.name, url: './img/richard.jpg', price: 1})\n      }\n      setarray(temparray)\n    });\n  });\n  \n    \n  // const arrayofplaces = useState([])\n  // callAPI(() =>{\n  //   fetch('https://api.geoapify.com/v2/places?categories=commercial.food_and_drink&filter=circle:-72.519867,42.375801,5000&limit=20&apiKey=1af6a8fa67c94cba9c73377e2866a995').then(function (response) {\n  //     return response.json();\n  //   }).then(function (result) {\n  //     for(var i = 0; i<result.features.length; i++){\n  //       arrayofplaces.push({name: result.features[i].properties.name, url: './img/richard.jpg', price: 1})\n  //     }\n  //   });\n  // }, []);\n  // console.log(arrayofplaces)\n // const characters = db\n  const [lastDirection, setLastDirection] = useState()\n  // var characters = []\n  // characters = arrayofplaces\n\n\n  const swiped = (direction, nameToDelete) => {\n      if(direction === 'right'){\n        swipes++\n        swipedRight.push(nameToDelete)\n        var length = swipedRight.length\n        console.log(swipedRight)\n        console.log('Test')\n        // give users a minimum number of swipes before giving them the best deal\n        // var i = 0\n        // while(i < 4)\n        // {\n        //   swipes++\n        //   swipedRight.push(nameToDelete)\n        //   var length = swipedRight.length\n        //   //console.log(swipedRight)\n        //   //console.log('Test')\n        //   currentChoices[i] = db.price \n        //   i++; \n        // }\n        \n        // for(i = 0; i < currentChoices.length; i++)\n        //   console.log(currentChoices[i]); \n        if(swipes === 2) {\n          console.log('done')\n        }\n      }\n      // const toBeRemoved = cardsLeft[cardsLeft.length - 1].name // Find the card object to be removed\n      // const index = db.map(person => person.name).indexOf(toBeRemoved) // Find the index of which to make the reference to\n      // alreadyRemoved.push(toBeRemoved) // Make sure the next card gets removed next time if this card do not have time to exit the screen\n      // childRefs[index].current.swipe(dir) // Swipe the card!\n    console.log('removing: ' + nameToDelete)\n    setLastDirection(direction)\n  }\n\n  const outOfFrame = (name) => {\n    console.log(name + ' left the screen!')\n  }\n\n  return (\n    <div className='readable'>\n      <link href='https://fonts.googleapis.com/css?family=Damion&display=swap' rel='stylesheet' />\n      <link href='https://fonts.googleapis.com/css?family=Alatsi&display=swap' rel='stylesheet' />\n      <link href='https://fonts.googleapis.com/css2?family=Staatliches&display=swap' rel='stylesheet' />\n      \n      <h1>Swipe right on your fave deals!</h1>\n      <div className='cardContainer'>\n        {arrayofplaces.map((place) =>\n          <TinderCard className='swipe' key={place.name} onSwipe={(dir) => swiped(dir, place.name)} onCardLeftScreen={() => outOfFrame(place.name)}>\n            <div style={{ backgroundImage: 'url(' + place.url + ')' }} className='card'>\n              <h2>{place.name} {place.price}</h2>\n            </div>\n          </TinderCard>\n        )}\n      </div>\n      {lastDirection ? <h2 className='infoText'>You swiped {lastDirection}</h2> : <h2 className='infoText' />}\n    </div>\n  )\n  \n  // return (\n  //   <div className='readable'>\n  //     <link href='https://fonts.googleapis.com/css?family=Damion&display=swap' rel='stylesheet' />\n  //     <link href='https://fonts.googleapis.com/css?family=Alatsi&display=swap' rel='stylesheet' />\n  //     <link href='https://fonts.googleapis.com/css2?family=Staatliches&display=swap' rel='stylesheet' />\n      \n  //     <h1>Swipe right on your fave deals!</h1>\n  //     <div className='cardContainer'>\n  //       {characters.map((charact) =>\n  //         <TinderCard className='swipe' key={place.name} onSwipe={(dir) => swiped(dir, place.name)} onCardLeftScreen={() => outOfFrame(place.name)}>\n  //           <div style={{ backgroundImage: 'url(' + place.url + ')' }} className='card'>\n  //             <h2>{place.name} {place.sprice}</h2>\n  //           </div>\n  //         </TinderCard>\n  //       )}\n  //     </div>\n  //     {lastDirection ? <h2 className='infoText'>You swiped {lastDirection}</h2> : <h2 className='infoText' />}\n  //   </div>\n  // ) \n}\n\nexport default Simple\n"]},"metadata":{},"sourceType":"module"}