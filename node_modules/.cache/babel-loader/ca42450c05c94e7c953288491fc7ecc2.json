{"ast":null,"code":"'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\n\nconst applyWriteConcern = require('../utils').applyWriteConcern;\n\nconst checkCollectionName = require('../utils').checkCollectionName;\n\nconst executeDbAdminCommand = require('./db_ops').executeDbAdminCommand;\n\nconst handleCallback = require('../utils').handleCallback;\n\nconst loadCollection = require('../dynamic_loaders').loadCollection;\n\nconst toError = require('../utils').toError;\n\nclass RenameOperation extends OperationBase {\n  constructor(collection, newName, options) {\n    super(options);\n    this.collection = collection;\n    this.newName = newName;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const newName = this.newName;\n    const options = this.options;\n    let Collection = loadCollection(); // Check the collection name\n\n    checkCollectionName(newName); // Build the command\n\n    const renameCollection = coll.namespace;\n    const toCollection = coll.s.namespace.withCollection(newName).toString();\n    const dropTarget = typeof options.dropTarget === 'boolean' ? options.dropTarget : false;\n    const cmd = {\n      renameCollection: renameCollection,\n      to: toCollection,\n      dropTarget: dropTarget\n    }; // Decorate command with writeConcern if supported\n\n    applyWriteConcern(cmd, {\n      db: coll.s.db,\n      collection: coll\n    }, options); // Execute against admin\n\n    executeDbAdminCommand(coll.s.db.admin().s.db, cmd, options, (err, doc) => {\n      if (err) return handleCallback(callback, err, null); // We have an error\n\n      if (doc.errmsg) return handleCallback(callback, toError(doc), null);\n\n      try {\n        return handleCallback(callback, null, new Collection(coll.s.db, coll.s.topology, coll.s.namespace.db, newName, coll.s.pkFactory, coll.s.options));\n      } catch (err) {\n        return handleCallback(callback, toError(err), null);\n      }\n    });\n  }\n\n}\n\nmodule.exports = RenameOperation;","map":null,"metadata":{},"sourceType":"script"}