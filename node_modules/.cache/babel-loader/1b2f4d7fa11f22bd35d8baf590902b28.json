{"ast":null,"code":"var _jsxFileName = \"/Users/aramaswamy/Desktop/Fumble/src/examples/Simple.js\";\nimport React, { useState } from 'react'; // import TinderCard from '../react-tinder-card/index'\n\nimport TinderCard from 'react-tinder-card';\nconst db = [{\n  name: 'Taco Bell',\n  url: './img/richard.jpg',\n  price: 1\n}, {\n  name: 'Olive Garden',\n  url: './img/erlich.jpg',\n  price: 2\n}, {\n  name: 'Chipotle',\n  url: './img/monica.jpg',\n  price: 3\n}, {\n  name: 'Dominoes',\n  url: './img/jared.jpg',\n  price: 4\n}, {\n  name: 'Wawa',\n  url: './img/dinesh.jpg',\n  price: 5\n}];\nvar swipedRight = [];\nvar currentChoices = [0, 0, 0, 0];\nvar swipes = 0;\n\nfunction Simple() {\n  const characters = db;\n  const [lastDirection, setLastDirection] = useState();\n\n  const swiped = (direction, nameToDelete) => {\n    if (direction === 'right') {\n      // swipes++\n      // swipedRight.push(nameToDelete)\n      // var length = swipedRight.length\n      // console.log(swipedRight)\n      // console.log('Test')\n      // give users a minimum number of swipes before giving them the best deal\n      var i = 0;\n\n      while (i < 4) {\n        swipes++;\n        swipedRight.push(nameToDelete);\n        var length = swipedRight.length;\n        console.log(swipedRight);\n        console.log('Test');\n        currentChoices[i] = character.price;\n        i++;\n      } // if(swipes === 2) {\n      //   console.log('done')\n      // }\n\n    } // const toBeRemoved = cardsLeft[cardsLeft.length - 1].name // Find the card object to be removed\n    // const index = db.map(person => person.name).indexOf(toBeRemoved) // Find the index of which to make the reference to\n    // alreadyRemoved.push(toBeRemoved) // Make sure the next card gets removed next time if this card do not have time to exit the screen\n    // childRefs[index].current.swipe(dir) // Swipe the card!\n\n\n    console.log('removing: ' + nameToDelete);\n    setLastDirection(direction);\n  };\n\n  const outOfFrame = name => {\n    console.log(name + ' left the screen!');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"readable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Damion&display=swap\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Alatsi&display=swap\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"link\", {\n    href: \"https://fonts.googleapis.com/css2?family=Staatliches&display=swap\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Swipe right on your fave deals!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cardContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, characters.map(character => /*#__PURE__*/React.createElement(TinderCard, {\n    className: \"swipe\",\n    key: character.name,\n    onSwipe: dir => swiped(dir, character.name),\n    onCardLeftScreen: () => outOfFrame(character.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundImage: 'url(' + character.url + ')'\n    },\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, character.name, \" \", character.price))))), lastDirection ? /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"infoText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 24\n    }\n  }, \"You swiped \", lastDirection) : /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"infoText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 83\n    }\n  }));\n}\n\nexport default Simple;","map":{"version":3,"sources":["/Users/aramaswamy/Desktop/Fumble/src/examples/Simple.js"],"names":["React","useState","TinderCard","db","name","url","price","swipedRight","currentChoices","swipes","Simple","characters","lastDirection","setLastDirection","swiped","direction","nameToDelete","i","push","length","console","log","character","outOfFrame","map","dir","backgroundImage"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n// import TinderCard from '../react-tinder-card/index'\nimport TinderCard from 'react-tinder-card'\n\nconst db = [\n  {\n    name: 'Taco Bell',\n    url: './img/richard.jpg',\n    price: 1\n  },\n  {\n    name: 'Olive Garden',\n    url: './img/erlich.jpg',\n    price: 2\n  },\n  {\n    name: 'Chipotle',\n    url: './img/monica.jpg',\n    price: 3\n  },\n  {\n    name: 'Dominoes',\n    url: './img/jared.jpg',\n    price: 4\n  },\n  {\n    name: 'Wawa',\n    url: './img/dinesh.jpg',\n    price: 5\n  }\n]\n\nvar swipedRight = []\nvar currentChoices = [0, 0, 0, 0]\nvar swipes = 0\nfunction Simple () {\n  const characters = db\n\n  const [lastDirection, setLastDirection] = useState()\n\n\n  const swiped = (direction, nameToDelete) => {\n      if(direction === 'right'){\n        // swipes++\n        // swipedRight.push(nameToDelete)\n        // var length = swipedRight.length\n        // console.log(swipedRight)\n        // console.log('Test')\n        // give users a minimum number of swipes before giving them the best deal\n        var i = 0\n        while(i < 4)\n        {\n          swipes++\n          swipedRight.push(nameToDelete)\n          var length = swipedRight.length\n          console.log(swipedRight)\n          console.log('Test')\n          currentChoices[i] = character.price \n          i++; \n        }\n        \n        \n        // if(swipes === 2) {\n        //   console.log('done')\n        // }\n      }\n      // const toBeRemoved = cardsLeft[cardsLeft.length - 1].name // Find the card object to be removed\n      // const index = db.map(person => person.name).indexOf(toBeRemoved) // Find the index of which to make the reference to\n      // alreadyRemoved.push(toBeRemoved) // Make sure the next card gets removed next time if this card do not have time to exit the screen\n      // childRefs[index].current.swipe(dir) // Swipe the card!\n    console.log('removing: ' + nameToDelete)\n    setLastDirection(direction)\n  }\n\n  const outOfFrame = (name) => {\n    console.log(name + ' left the screen!')\n  }\n\n  return (\n    <div className='readable'>\n      <link href='https://fonts.googleapis.com/css?family=Damion&display=swap' rel='stylesheet' />\n      <link href='https://fonts.googleapis.com/css?family=Alatsi&display=swap' rel='stylesheet' />\n      <link href='https://fonts.googleapis.com/css2?family=Staatliches&display=swap' rel='stylesheet' />\n      \n      <h1>Swipe right on your fave deals!</h1>\n      <div className='cardContainer'>\n        {characters.map((character) =>\n          <TinderCard className='swipe' key={character.name} onSwipe={(dir) => swiped(dir, character.name)} onCardLeftScreen={() => outOfFrame(character.name)}>\n            <div style={{ backgroundImage: 'url(' + character.url + ')' }} className='card'>\n              <h2>{character.name} {character.price}</h2>\n            </div>\n          </TinderCard>\n        )}\n      </div>\n      {lastDirection ? <h2 className='infoText'>You swiped {lastDirection}</h2> : <h2 className='infoText' />}\n    </div>\n  ) \n}\n\nexport default Simple\n"]},"metadata":{},"sourceType":"module"}