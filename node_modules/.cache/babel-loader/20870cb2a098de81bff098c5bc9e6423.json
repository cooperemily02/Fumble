{"ast":null,"code":"var _jsxFileName = \"/Users/aramaswamy/Desktop/Fumble/src/examples/Simple.js\";\nimport React, { useState } from 'react'; // import TinderCard from '../react-tinder-card/index'\n\nimport TinderCard from 'react-tinder-card';\nimport ReactDOM from 'react-dom';\n\nconst MongoClient = require('mongodb').MongoClient; //MongoClient.connect('mongodb+srv://shambhavir:Success2021!!@cluster0.xrzxq.mongodb.net/fumble?retryWrites=true&w=majority'\n\n\nconst db = [{\n  name: 'Taco Bell',\n  url: './img/richard.jpg',\n  weight: 1\n}, {\n  name: 'Olive Garden',\n  url: './img/erlich.jpg',\n  price: 2\n}, {\n  name: 'Chipotle',\n  url: './img/monica.jpg',\n  price: 3\n}, {\n  name: 'Dominoes',\n  url: './img/jared.jpg',\n  price: 4\n}, {\n  name: 'Wawa',\n  url: './img/dinesh.jpg',\n  price: 5\n}, {\n  name: 'comfort food',\n  type: 'category'\n}];\n\nfunction callAPI() {\n  if (true) {\n    fetch('https://api.geoapify.com/v2/places?categories=commercial.food_and_drink&filter=circle:-72.519867,42.375801,5000&limit=20&apiKey=1af6a8fa67c94cba9c73377e2866a995').then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      for (var i = 0; i < result.features.length; i++) {\n        arrayofplaces.push({\n          name: result.features[i].properties.name,\n          url: './img/richard.jpg',\n          price: 1\n        });\n      }\n    });\n  }\n}\n\nvar swipedRight = [];\nvar currentChoices = [0, 0, 0, 0];\nvar swipes = 0;\n\nfunction Simple() {\n  const arrayofplaces = useState([]);\n  callAPI(() => {}, []);\n  console.log(arrayofplaces); // const characters = db\n\n  const characters = arrayofplaces;\n  const [lastDirection, setLastDirection] = useState();\n\n  const swiped = (direction, nameToDelete) => {\n    if (direction === 'right') {\n      swipes++;\n      swipedRight.push(nameToDelete);\n      var length = swipedRight.length;\n      console.log(swipedRight);\n      console.log('Test'); // give users a minimum number of swipes before giving them the best deal\n      // var i = 0\n      // while(i < 4)\n      // {\n      //   swipes++\n      //   swipedRight.push(nameToDelete)\n      //   var length = swipedRight.length\n      //   //console.log(swipedRight)\n      //   //console.log('Test')\n      //   currentChoices[i] = db.price \n      //   i++; \n      // }\n      // for(i = 0; i < currentChoices.length; i++)\n      //   console.log(currentChoices[i]); \n\n      if (swipes === 2) {\n        console.log('done');\n      }\n    } // const toBeRemoved = cardsLeft[cardsLeft.length - 1].name // Find the card object to be removed\n    // const index = db.map(person => person.name).indexOf(toBeRemoved) // Find the index of which to make the reference to\n    // alreadyRemoved.push(toBeRemoved) // Make sure the next card gets removed next time if this card do not have time to exit the screen\n    // childRefs[index].current.swipe(dir) // Swipe the card!\n\n\n    console.log('removing: ' + nameToDelete);\n    setLastDirection(direction);\n  };\n\n  const outOfFrame = name => {\n    console.log(name + ' left the screen!');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"readable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Damion&display=swap\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Alatsi&display=swap\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"link\", {\n    href: \"https://fonts.googleapis.com/css2?family=Staatliches&display=swap\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"Swipe right on your fave deals!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cardContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, characters.map(character => /*#__PURE__*/React.createElement(TinderCard, {\n    className: \"swipe\",\n    key: character.name,\n    onSwipe: dir => swiped(dir, character.name),\n    onCardLeftScreen: () => outOfFrame(character.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundImage: 'url(' + character.url + ')'\n    },\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, character.name, \" \", character.price))))), lastDirection ? /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"infoText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 24\n    }\n  }, \"You swiped \", lastDirection) : /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"infoText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 83\n    }\n  })); // return (\n  //   <div className='readable'>\n  //     <link href='https://fonts.googleapis.com/css?family=Damion&display=swap' rel='stylesheet' />\n  //     <link href='https://fonts.googleapis.com/css?family=Alatsi&display=swap' rel='stylesheet' />\n  //     <link href='https://fonts.googleapis.com/css2?family=Staatliches&display=swap' rel='stylesheet' />\n  //     <h1>Swipe right on your fave deals!</h1>\n  //     <div className='cardContainer'>\n  //       {characters.map((charact) =>\n  //         <TinderCard className='swipe' key={place.name} onSwipe={(dir) => swiped(dir, place.name)} onCardLeftScreen={() => outOfFrame(place.name)}>\n  //           <div style={{ backgroundImage: 'url(' + place.url + ')' }} className='card'>\n  //             <h2>{place.name} {place.sprice}</h2>\n  //           </div>\n  //         </TinderCard>\n  //       )}\n  //     </div>\n  //     {lastDirection ? <h2 className='infoText'>You swiped {lastDirection}</h2> : <h2 className='infoText' />}\n  //   </div>\n  // ) \n}\n\nexport default Simple;","map":{"version":3,"sources":["/Users/aramaswamy/Desktop/Fumble/src/examples/Simple.js"],"names":["React","useState","TinderCard","ReactDOM","MongoClient","require","db","name","url","weight","price","type","callAPI","fetch","then","response","json","result","i","features","length","arrayofplaces","push","properties","swipedRight","currentChoices","swipes","Simple","console","log","characters","lastDirection","setLastDirection","swiped","direction","nameToDelete","outOfFrame","map","character","dir","backgroundImage"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n// import TinderCard from '../react-tinder-card/index'\nimport TinderCard from 'react-tinder-card'\nimport ReactDOM from 'react-dom';\nconst MongoClient = require('mongodb').MongoClient\n//MongoClient.connect('mongodb+srv://shambhavir:Success2021!!@cluster0.xrzxq.mongodb.net/fumble?retryWrites=true&w=majority'\nconst db = [\n  {\n    name: 'Taco Bell',\n    url: './img/richard.jpg',\n    weight: 1\n  },\n  {\n    name: 'Olive Garden',\n    url: './img/erlich.jpg',\n    price: 2\n  },\n  {\n    name: 'Chipotle',\n    url: './img/monica.jpg',\n    price: 3\n  },\n  {\n    name: 'Dominoes',\n    url: './img/jared.jpg',\n    price: 4\n  },\n  {\n    name: 'Wawa',\n    url: './img/dinesh.jpg',\n    price: 5\n  },\n  {\n    name: 'comfort food',\n    type: 'category'\n  }\n]\n\nfunction callAPI () {\n  if (true) {\n    fetch('https://api.geoapify.com/v2/places?categories=commercial.food_and_drink&filter=circle:-72.519867,42.375801,5000&limit=20&apiKey=1af6a8fa67c94cba9c73377e2866a995').then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      for(var i = 0; i<result.features.length; i++){\n        arrayofplaces.push({name: result.features[i].properties.name, url: './img/richard.jpg', price: 1})\n      }\n    });\n  }\n}\n\nvar swipedRight = []\nvar currentChoices = [0, 0, 0, 0] \nvar swipes = 0\nfunction Simple () {\n  const arrayofplaces = useState([])\n  callAPI(() =>{\n\n  }, []);\n  console.log(arrayofplaces)\n // const characters = db\n  const characters = arrayofplaces\n  const [lastDirection, setLastDirection] = useState()\n\n\n  const swiped = (direction, nameToDelete) => {\n      if(direction === 'right'){\n        swipes++\n        swipedRight.push(nameToDelete)\n        var length = swipedRight.length\n        console.log(swipedRight)\n        console.log('Test')\n        // give users a minimum number of swipes before giving them the best deal\n        // var i = 0\n        // while(i < 4)\n        // {\n        //   swipes++\n        //   swipedRight.push(nameToDelete)\n        //   var length = swipedRight.length\n        //   //console.log(swipedRight)\n        //   //console.log('Test')\n        //   currentChoices[i] = db.price \n        //   i++; \n        // }\n        \n        // for(i = 0; i < currentChoices.length; i++)\n        //   console.log(currentChoices[i]); \n        if(swipes === 2) {\n          console.log('done')\n        }\n      }\n      // const toBeRemoved = cardsLeft[cardsLeft.length - 1].name // Find the card object to be removed\n      // const index = db.map(person => person.name).indexOf(toBeRemoved) // Find the index of which to make the reference to\n      // alreadyRemoved.push(toBeRemoved) // Make sure the next card gets removed next time if this card do not have time to exit the screen\n      // childRefs[index].current.swipe(dir) // Swipe the card!\n    console.log('removing: ' + nameToDelete)\n    setLastDirection(direction)\n  }\n\n  const outOfFrame = (name) => {\n    console.log(name + ' left the screen!')\n  }\n\n  return (\n    <div className='readable'>\n      <link href='https://fonts.googleapis.com/css?family=Damion&display=swap' rel='stylesheet' />\n      <link href='https://fonts.googleapis.com/css?family=Alatsi&display=swap' rel='stylesheet' />\n      <link href='https://fonts.googleapis.com/css2?family=Staatliches&display=swap' rel='stylesheet' />\n      \n      <h1>Swipe right on your fave deals!</h1>\n      <div className='cardContainer'>\n        {characters.map((character) =>\n          <TinderCard className='swipe' key={character.name} onSwipe={(dir) => swiped(dir, character.name)} onCardLeftScreen={() => outOfFrame(character.name)}>\n            <div style={{ backgroundImage: 'url(' + character.url + ')' }} className='card'>\n              <h2>{character.name} {character.price}</h2>\n            </div>\n          </TinderCard>\n        )}\n      </div>\n      {lastDirection ? <h2 className='infoText'>You swiped {lastDirection}</h2> : <h2 className='infoText' />}\n    </div>\n  )\n  \n  // return (\n  //   <div className='readable'>\n  //     <link href='https://fonts.googleapis.com/css?family=Damion&display=swap' rel='stylesheet' />\n  //     <link href='https://fonts.googleapis.com/css?family=Alatsi&display=swap' rel='stylesheet' />\n  //     <link href='https://fonts.googleapis.com/css2?family=Staatliches&display=swap' rel='stylesheet' />\n      \n  //     <h1>Swipe right on your fave deals!</h1>\n  //     <div className='cardContainer'>\n  //       {characters.map((charact) =>\n  //         <TinderCard className='swipe' key={place.name} onSwipe={(dir) => swiped(dir, place.name)} onCardLeftScreen={() => outOfFrame(place.name)}>\n  //           <div style={{ backgroundImage: 'url(' + place.url + ')' }} className='card'>\n  //             <h2>{place.name} {place.sprice}</h2>\n  //           </div>\n  //         </TinderCard>\n  //       )}\n  //     </div>\n  //     {lastDirection ? <h2 className='infoText'>You swiped {lastDirection}</h2> : <h2 className='infoText' />}\n  //   </div>\n  // ) \n}\n\nexport default Simple\n"]},"metadata":{},"sourceType":"module"}