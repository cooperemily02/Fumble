{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.color = exports.hsla = exports.rgba = exports.hex = undefined;\n\nvar _utils = require('./utils');\n\nvar hex = exports.hex = function hex(v) {\n  var r = void 0,\n      g = void 0,\n      b = void 0; // If we have 6 characters, ie #FF0000\n\n  if (v.length > 4) {\n    r = v.substr(1, 2);\n    g = v.substr(3, 2);\n    b = v.substr(5, 2); // Or we have 3 characters, ie #F00\n  } else {\n    r = v.substr(1, 1);\n    g = v.substr(2, 1);\n    b = v.substr(3, 1);\n    r += r;\n    g += g;\n    b += b;\n  }\n\n  return {\n    red: parseInt(r, 16),\n    green: parseInt(g, 16),\n    blue: parseInt(b, 16),\n    alpha: 1\n  };\n};\n\nvar rgba = exports.rgba = (0, _utils.splitColorValues)(['red', 'green', 'blue', 'alpha']);\nvar hsla = exports.hsla = (0, _utils.splitColorValues)(['hue', 'saturation', 'lightness', 'alpha']);\n\nvar color = exports.color = function color(v) {\n  if ((0, _utils.isRgb)(v)) {\n    return rgba(v);\n  } else if ((0, _utils.isHex)(v)) {\n    return hex(v);\n  } else if ((0, _utils.isHsl)(v)) {\n    return hsla(v);\n  }\n\n  return v;\n};","map":{"version":3,"sources":["../../src/inc/parsers.js"],"names":["hex","r","g","b","v","red","parseInt","green","blue","alpha","rgba","hsla","color"],"mappings":";;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEO,IAAMA,GAAAA,GAAAA,OAAAA,CAAAA,GAAAA,GAAM,SAANA,GAAM,CAAA,CAAA,EAAO;AACxB,MAAIC,CAAAA,GAAAA,KAAJ,CAAA;AAAA,MAAOC,CAAAA,GAAAA,KAAP,CAAA;AAAA,MAAUC,CAAAA,GAAAA,KAAV,CAAA,CADwB,CAGxB;;AACA,MAAIC,CAAAA,CAAAA,MAAAA,GAAJ,CAAA,EAAkB;AAChBH,IAAAA,CAAAA,GAAIG,CAAAA,CAAAA,MAAAA,CAAAA,CAAAA,EAAJH,CAAIG,CAAJH;AACAC,IAAAA,CAAAA,GAAIE,CAAAA,CAAAA,MAAAA,CAAAA,CAAAA,EAAJF,CAAIE,CAAJF;AACAC,IAAAA,CAAAA,GAAIC,CAAAA,CAAAA,MAAAA,CAAAA,CAAAA,EAAJD,CAAIC,CAAJD,CAHgB,CAKlB;AALA,GAAA,MAMO;AACLF,IAAAA,CAAAA,GAAIG,CAAAA,CAAAA,MAAAA,CAAAA,CAAAA,EAAJH,CAAIG,CAAJH;AACAC,IAAAA,CAAAA,GAAIE,CAAAA,CAAAA,MAAAA,CAAAA,CAAAA,EAAJF,CAAIE,CAAJF;AACAC,IAAAA,CAAAA,GAAIC,CAAAA,CAAAA,MAAAA,CAAAA,CAAAA,EAAJD,CAAIC,CAAJD;AACAF,IAAAA,CAAAA,IAAAA,CAAAA;AACAC,IAAAA,CAAAA,IAAAA,CAAAA;AACAC,IAAAA,CAAAA,IAAAA,CAAAA;AACD;;AAED,SAAO;AACLE,IAAAA,GAAAA,EAAKC,QAAAA,CAAAA,CAAAA,EADA,EACAA,CADA;AAELC,IAAAA,KAAAA,EAAOD,QAAAA,CAAAA,CAAAA,EAFF,EAEEA,CAFF;AAGLE,IAAAA,IAAAA,EAAMF,QAAAA,CAAAA,CAAAA,EAHD,EAGCA,CAHD;AAILG,IAAAA,KAAAA,EAAO;AAJF,GAAP;AAnBK,CAAA;;AA2BA,IAAMC,IAAAA,GAAAA,OAAAA,CAAAA,IAAAA,GAAO,CAAA,GAAA,MAAA,CAAA,gBAAA,EAAiB,CAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAA9B,OAA8B,CAAjB,CAAb;AAEA,IAAMC,IAAAA,GAAAA,OAAAA,CAAAA,IAAAA,GAAO,CAAA,GAAA,MAAA,CAAA,gBAAA,EAAiB,CAAA,KAAA,EAAA,YAAA,EAAA,WAAA,EAA9B,OAA8B,CAAjB,CAAb;;AAEA,IAAMC,KAAAA,GAAAA,OAAAA,CAAAA,KAAAA,GAAQ,SAARA,KAAQ,CAAA,CAAA,EAAO;AAC1B,MAAI,CAAA,GAAA,MAAA,CAAA,KAAA,EAAJ,CAAI,CAAJ,EAAc;AACZ,WAAOF,IAAAA,CAAP,CAAOA,CAAP;AADF,GAAA,MAEO,IAAI,CAAA,GAAA,MAAA,CAAA,KAAA,EAAJ,CAAI,CAAJ,EAAc;AACnB,WAAOV,GAAAA,CAAP,CAAOA,CAAP;AADK,GAAA,MAEA,IAAI,CAAA,GAAA,MAAA,CAAA,KAAA,EAAJ,CAAI,CAAJ,EAAc;AACnB,WAAOW,IAAAA,CAAP,CAAOA,CAAP;AACD;;AAED,SAAA,CAAA;AATK,CAAA","sourcesContent":["import { splitColorValues, isRgb, isHex, isHsl } from './utils';\n\nexport const hex = (v) => {\n  let r, g, b;\n\n  // If we have 6 characters, ie #FF0000\n  if (v.length > 4) {\n    r = v.substr(1, 2);\n    g = v.substr(3, 2);\n    b = v.substr(5, 2);\n\n  // Or we have 3 characters, ie #F00\n  } else {\n    r = v.substr(1, 1);\n    g = v.substr(2, 1);\n    b = v.substr(3, 1);\n    r += r;\n    g += g;\n    b += b;\n  }\n\n  return {\n    red: parseInt(r, 16),\n    green: parseInt(g, 16),\n    blue: parseInt(b, 16),\n    alpha: 1\n  };\n};\n\nexport const rgba = splitColorValues(['red', 'green', 'blue', 'alpha']);\n\nexport const hsla = splitColorValues(['hue', 'saturation', 'lightness', 'alpha']);\n\nexport const color = (v) => {\n  if (isRgb(v)) {\n    return rgba(v);\n  } else if (isHex(v)) {\n    return hex(v);\n  } else if (isHsl(v)) {\n    return hsla(v);\n  }\n\n  return v;\n};\n"]},"metadata":{},"sourceType":"script"}