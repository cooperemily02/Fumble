{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _ = require('./');\n\nvar _2 = _interopRequireDefault(_);\n\nvar _transformers = require('../inc/transformers');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TrackOffset = function (_Action) {\n  _inherits(TrackOffset, _Action);\n\n  function TrackOffset() {\n    _classCallCheck(this, TrackOffset);\n\n    return _possibleConstructorReturn(this, _Action.apply(this, arguments));\n  }\n\n  TrackOffset.prototype.onStart = function onStart() {\n    var action = this.props.action;\n    this.applyOffset = (0, _transformers.applyOffset)(action.get(), this.current);\n  };\n\n  TrackOffset.prototype.update = function update() {\n    var action = this.props.action;\n    return this.applyOffset(action.get());\n  };\n\n  return TrackOffset;\n}(_2.default);\n\nexports.default = function (action, props) {\n  return new TrackOffset(_extends({\n    action: action\n  }, props));\n};","map":{"version":3,"sources":["../../src/actions/track-offset.js"],"names":["TrackOffset","onStart","action","update"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,IAAA,CAAA,GAAA,OAAA,CAAA,IAAA,CAAA;;;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,W;;;;;;;;;wBACJC,O,sBAAU;AAAA,QACAC,MADA,GACW,KADX,KACW,CADX,MAAA;AAER,SAAA,WAAA,GAAmB,CAAA,GAAA,aAAA,CAAA,WAAA,EAAYA,MAAAA,CAAZ,GAAYA,EAAZ,EAA0B,KAA7C,OAAmB,CAAnB;;;wBAGFC,M,qBAAS;AAAA,QACCD,MADD,GACY,KADZ,KACY,CADZ,MAAA;AAEP,WAAO,KAAA,WAAA,CAAiBA,MAAAA,CAAxB,GAAwBA,EAAjB,CAAP;;;;;;kBAIW,UAAA,MAAA,EAAA,KAAA,EAAA;AAAA,SAAmB,IAAA,WAAA,CAAA,QAAA,CAAA;AAAkBA,IAAAA,MAAAA,EAAlB;AAAA,GAAA,EAAnB,KAAmB,CAAA,CAAnB","sourcesContent":["import Action from './';\nimport { applyOffset } from '../inc/transformers';\n\nclass TrackOffset extends Action {\n  onStart() {\n    const { action } = this.props;\n    this.applyOffset = applyOffset(action.get(), this.current);\n  }\n\n  update() {\n    const { action } = this.props;\n    return this.applyOffset(action.get());\n  }\n}\n\nexport default (action, props) => new TrackOffset({ action, ...props });\n"]},"metadata":{},"sourceType":"script"}