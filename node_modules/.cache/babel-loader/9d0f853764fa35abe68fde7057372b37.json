{"ast":null,"code":"'use strict';\n\nconst handleCallback = require('../utils').handleCallback;\n\nconst OperationBase = require('./operation').OperationBase;\n\nconst toError = require('../utils').toError;\n\nclass FindOneOperation extends OperationBase {\n  constructor(collection, query, options) {\n    super(options);\n    this.collection = collection;\n    this.query = query;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const query = this.query;\n    const options = this.options;\n\n    try {\n      const cursor = coll.find(query, options).limit(-1).batchSize(1); // Return the item\n\n      cursor.next((err, item) => {\n        if (err != null) return handleCallback(callback, toError(err), null);\n        handleCallback(callback, null, item);\n      });\n    } catch (e) {\n      callback(e);\n    }\n  }\n\n}\n\nmodule.exports = FindOneOperation;","map":null,"metadata":{},"sourceType":"script"}