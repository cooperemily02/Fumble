{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = build;\n\nvar _utils = require('../../inc/utils');\n\nvar _transformProps = require('../css/transform-props');\n\nvar _transformProps2 = _interopRequireDefault(_transformProps);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar ZERO_NOT_ZERO = 0.0001;\n\nfunction build(state, data) {\n  var hasTransform = false;\n  var props = {};\n  var scale = state.scale !== undefined ? state.scale || ZERO_NOT_ZERO : state.scaleX || 1;\n  var scaleY = state.scaleY !== undefined ? state.scaleY || ZERO_NOT_ZERO : scale || 1;\n  var transformOriginX = data.width * ((state.originX || 50) / 100) + data.x;\n  var transformOriginY = data.height * ((state.originY || 50) / 100) + data.y;\n  var scaleTransformX = -transformOriginX * (scale * 1);\n  var scaleTransformY = -transformOriginY * (scaleY * 1);\n  var scaleReplaceX = transformOriginX / scale;\n  var scaleReplaceY = transformOriginY / scaleY;\n  var transform = {\n    translate: 'translate(' + state.translateX + ', ' + state.translateY + ') ',\n    scale: 'translate(' + scaleTransformX + ', ' + scaleTransformY + ') scale(' + scale + ', ' + scaleY + ') translate(' + scaleReplaceX + ', ' + scaleReplaceY + ') ',\n    rotate: 'rotate(' + state.rotate + ', ' + transformOriginX + ', ' + transformOriginY + ') ',\n    skewX: 'skewX(' + state.skewX + ') ',\n    skewY: 'skewY(' + state.skewY + ') '\n  };\n\n  for (var key in state) {\n    if (state.hasOwnProperty(key)) {\n      if (_transformProps2.default[key]) {\n        hasTransform = true;\n      } else {\n        props[(0, _utils.camelToDash)(key)] = state[key];\n      }\n    }\n  }\n\n  if (hasTransform) {\n    props.transform = '';\n\n    for (var _key in transform) {\n      if (transform.hasOwnProperty(_key)) {\n        var defaultValue = _key === 'scale' ? '1' : '0';\n        props.transform += transform[_key].replace(/undefined/g, defaultValue);\n      }\n    }\n  }\n\n  return props;\n}","map":{"version":3,"sources":["../../../src/renderers/svg/build.js"],"names":["ZERO_NOT_ZERO","build","hasTransform","props","scale","state","scaleY","transformOriginX","data","transformOriginY","scaleTransformX","scaleTransformY","scaleReplaceX","scaleReplaceY","transform","translate","rotate","skewX","skewY","defaultValue","key"],"mappings":";;;kBAKwBC,K;;AALxB,IAAA,MAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;;;;;;;;;AAEA,IAAMD,aAAAA,GAAN,MAAA;;AAEe,SAAA,KAAA,CAAA,KAAA,EAAA,IAAA,EAA4B;AACzC,MAAIE,YAAAA,GAAJ,KAAA;AACA,MAAMC,KAAAA,GAAN,EAAA;AACA,MAAMC,KAAAA,GAAQC,KAAAA,CAAAA,KAAAA,KAAAA,SAAAA,GAA4BA,KAAAA,CAAAA,KAAAA,IAA5BA,aAAAA,GAA2DA,KAAAA,CAAAA,MAAAA,IAAzE,CAAA;AACA,MAAMC,MAAAA,GAASD,KAAAA,CAAAA,MAAAA,KAAAA,SAAAA,GAA6BA,KAAAA,CAAAA,MAAAA,IAA7BA,aAAAA,GAA6DD,KAAAA,IAA5E,CAAA;AACA,MAAMG,gBAAAA,GAAmBC,IAAAA,CAAAA,KAAAA,IAAc,CAACH,KAAAA,CAAAA,OAAAA,IAAD,EAAA,IAAdG,GAAAA,IAA6CA,IAAAA,CAAtE,CAAA;AACA,MAAMC,gBAAAA,GAAmBD,IAAAA,CAAAA,MAAAA,IAAe,CAACH,KAAAA,CAAAA,OAAAA,IAAD,EAAA,IAAfG,GAAAA,IAA8CA,IAAAA,CAAvE,CAAA;AACA,MAAME,eAAAA,GAAkB,CAAA,gBAAA,IAAsBN,KAAAA,GAA9C,CAAwB,CAAxB;AACA,MAAMO,eAAAA,GAAkB,CAAA,gBAAA,IAAsBL,MAAAA,GAA9C,CAAwB,CAAxB;AACA,MAAMM,aAAAA,GAAgBL,gBAAAA,GAAtB,KAAA;AACA,MAAMM,aAAAA,GAAgBJ,gBAAAA,GAAtB,MAAA;AACA,MAAMK,SAAAA,GAAY;AAChBC,IAAAA,SAAAA,EAAAA,eAAwBV,KAAAA,CAAxBU,UAAAA,GAAAA,IAAAA,GAA6CV,KAAAA,CAA7CU,UAAAA,GADgB,IAAA;AAEhBX,IAAAA,KAAAA,EAAAA,eAAAA,eAAAA,GAAAA,IAAAA,GAAAA,eAAAA,GAAAA,UAAAA,GAAAA,KAAAA,GAAAA,IAAAA,GAAAA,MAAAA,GAAAA,cAAAA,GAAAA,aAAAA,GAAAA,IAAAA,GAAAA,aAAAA,GAFgB,IAAA;AAGhBY,IAAAA,MAAAA,EAAAA,YAAkBX,KAAAA,CAAlBW,MAAAA,GAAAA,IAAAA,GAAAA,gBAAAA,GAAAA,IAAAA,GAAAA,gBAAAA,GAHgB,IAAA;AAIhBC,IAAAA,KAAAA,EAAAA,WAAgBZ,KAAAA,CAAhBY,KAAAA,GAJgB,IAAA;AAKhBC,IAAAA,KAAAA,EAAAA,WAAgBb,KAAAA,CAAhBa,KAAAA,GAAAA;AALgB,GAAlB;;AAQA,OAAK,IAAL,GAAA,IAAA,KAAA,EAAuB;AACrB,QAAIb,KAAAA,CAAAA,cAAAA,CAAJ,GAAIA,CAAJ,EAA+B;AAC7B,UAAI,gBAAA,CAAA,OAAA,CAAJ,GAAI,CAAJ,EAAyB;AACvBH,QAAAA,YAAAA,GAAAA,IAAAA;AADF,OAAA,MAEO;AACLC,QAAAA,KAAAA,CAAM,CAAA,GAAA,MAAA,CAAA,WAAA,EAANA,GAAM,CAANA,CAAAA,GAA0BE,KAAAA,CAA1BF,GAA0BE,CAA1BF;AACD;AACF;AACF;;AAED,MAAA,YAAA,EAAkB;AAChBA,IAAAA,KAAAA,CAAAA,SAAAA,GAAAA,EAAAA;;AAEA,SAAK,IAAL,IAAA,IAAA,SAAA,EAA2B;AACzB,UAAIW,SAAAA,CAAAA,cAAAA,CAAJ,IAAIA,CAAJ,EAAmC;AACjC,YAAMK,YAAAA,GAAgBC,IAAAA,KAAD,OAACA,GAAD,GAACA,GAAtB,GAAA;AACAjB,QAAAA,KAAAA,CAAAA,SAAAA,IAAmBW,SAAAA,CAAAA,IAAAA,CAAAA,CAAAA,OAAAA,CAAAA,YAAAA,EAAnBX,YAAmBW,CAAnBX;AACD;AACF;AACF;;AAED,SAAA,KAAA;AACD","sourcesContent":["import { camelToDash } from '../../inc/utils';\nimport transformProps from '../css/transform-props';\n\nconst ZERO_NOT_ZERO = 0.0001;\n\nexport default function build(state, data) {\n  let hasTransform = false;\n  const props = {};\n  const scale = state.scale !== undefined ? state.scale || ZERO_NOT_ZERO : state.scaleX || 1;\n  const scaleY = state.scaleY !== undefined ? state.scaleY || ZERO_NOT_ZERO : scale || 1;\n  const transformOriginX = data.width * ((state.originX || 50) / 100) + data.x;\n  const transformOriginY = data.height * ((state.originY || 50) / 100) + data.y;\n  const scaleTransformX = - transformOriginX * (scale * 1);\n  const scaleTransformY = - transformOriginY * (scaleY * 1);\n  const scaleReplaceX = transformOriginX / scale;\n  const scaleReplaceY = transformOriginY / scaleY;\n  const transform = {\n    translate: `translate(${state.translateX}, ${state.translateY}) `,\n    scale: `translate(${scaleTransformX}, ${scaleTransformY}) scale(${scale}, ${scaleY}) translate(${scaleReplaceX}, ${scaleReplaceY}) `,\n    rotate: `rotate(${state.rotate}, ${transformOriginX}, ${transformOriginY}) `,\n    skewX: `skewX(${state.skewX}) `,\n    skewY: `skewY(${state.skewY}) `\n  };\n\n  for (let key in state) {\n    if (state.hasOwnProperty(key)) {\n      if (transformProps[key]) {\n        hasTransform = true;\n      } else {\n        props[camelToDash(key)] = state[key];\n      }\n    }\n  }\n\n  if (hasTransform) {\n    props.transform = '';\n\n    for (let key in transform) {\n      if (transform.hasOwnProperty(key)) {\n        const defaultValue = (key === 'scale') ? '1' : '0';\n        props.transform += transform[key].replace(/undefined/g, defaultValue);\n      }\n    }\n  }\n\n  return props;\n}\n"]},"metadata":{},"sourceType":"script"}