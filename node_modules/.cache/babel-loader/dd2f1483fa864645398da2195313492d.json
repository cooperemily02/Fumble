{"ast":null,"code":"'use strict';\n\nconst FindAndModifyOperation = require('./find_and_modify');\n\nconst hasAtomicOperators = require('../utils').hasAtomicOperators;\n\nclass FindOneAndUpdateOperation extends FindAndModifyOperation {\n  constructor(collection, filter, update, options) {\n    // Final options\n    const finalOptions = Object.assign({}, options);\n    finalOptions.fields = options.projection;\n    finalOptions.update = true;\n    finalOptions.new = typeof options.returnOriginal === 'boolean' ? !options.returnOriginal : false;\n    finalOptions.upsert = typeof options.upsert === 'boolean' ? options.upsert : false;\n\n    if (filter == null || typeof filter !== 'object') {\n      throw new TypeError('Filter parameter must be an object');\n    }\n\n    if (update == null || typeof update !== 'object') {\n      throw new TypeError('Update parameter must be an object');\n    }\n\n    if (!hasAtomicOperators(update)) {\n      throw new TypeError('Update document requires atomic operators');\n    }\n\n    super(collection, filter, finalOptions.sort, update, finalOptions);\n  }\n\n}\n\nmodule.exports = FindOneAndUpdateOperation;","map":null,"metadata":{},"sourceType":"script"}