{"ast":null,"code":"'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\n\nconst handleCallback = require('../utils').handleCallback;\n\nconst MongoError = require('../core').MongoError;\n\nclass OptionsOperation extends OperationBase {\n  constructor(collection, options) {\n    super(options);\n    this.collection = collection;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const opts = this.options;\n    coll.s.db.listCollections({\n      name: coll.collectionName\n    }, opts).toArray((err, collections) => {\n      if (err) return handleCallback(callback, err);\n\n      if (collections.length === 0) {\n        return handleCallback(callback, MongoError.create({\n          message: `collection ${coll.namespace} not found`,\n          driver: true\n        }));\n      }\n\n      handleCallback(callback, err, collections[0].options || null);\n    });\n  }\n\n}\n\nmodule.exports = OptionsOperation;","map":null,"metadata":{},"sourceType":"script"}