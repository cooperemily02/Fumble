{"ast":null,"code":"'use strict'; // async function* asyncIterator() {\n//   while (true) {\n//     const value = await this.next();\n//     if (!value) {\n//       await this.close();\n//       return;\n//     }\n//     yield value;\n//   }\n// }\n// TODO: change this to the async generator function above\n\nfunction asyncIterator() {\n  const cursor = this;\n  return {\n    next: function () {\n      return Promise.resolve().then(() => cursor.next()).then(value => {\n        if (!value) {\n          return cursor.close().then(() => ({\n            value,\n            done: true\n          }));\n        }\n\n        return {\n          value,\n          done: false\n        };\n      });\n    }\n  };\n}\n\nexports.asyncIterator = asyncIterator;","map":null,"metadata":{},"sourceType":"script"}