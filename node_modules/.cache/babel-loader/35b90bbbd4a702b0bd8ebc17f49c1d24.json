{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _ = require('./');\n\nvar _2 = _interopRequireDefault(_);\n\nvar _framesync = require('framesync');\n\nvar _transformers = require('../inc/transformers');\n\nvar _calc = require('../inc/calc');\n\nvar _easing = require('../inc/easing');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar clampProgress = (0, _transformers.clamp)(0, 1);\nvar NEXT_STEPS = {\n  loop: function loop(tween) {\n    return tween.start();\n  },\n  yoyo: function yoyo(tween) {\n    return tween.reverse().start();\n  },\n  flip: function flip(tween) {\n    return tween.flip().start();\n  }\n};\n\nvar Tween = function (_Action) {\n  _inherits(Tween, _Action);\n\n  function Tween() {\n    _classCallCheck(this, Tween);\n\n    return _possibleConstructorReturn(this, _Action.apply(this, arguments));\n  }\n\n  Tween.prototype.onStart = function onStart() {\n    var _props = this.props,\n        duration = _props.duration,\n        playDirection = _props.playDirection;\n    this.elapsed = playDirection === 1 ? 0 : duration;\n    this.progress = 0;\n  };\n\n  Tween.prototype.update = function update() {\n    var _props2 = this.props,\n        duration = _props2.duration,\n        ease = _props2.ease,\n        from = _props2.from,\n        to = _props2.to,\n        playDirection = _props2.playDirection;\n\n    if (!this.isManualUpdate) {\n      this.elapsed += (0, _framesync.timeSinceLastFrame)() * playDirection;\n    }\n\n    this.isManualUpdate = false;\n    this.progress = clampProgress((0, _calc.getProgressFromValue)(0, duration, this.elapsed));\n    return (0, _calc.getValueFromProgress)(from, to, ease(this.progress));\n  };\n\n  Tween.prototype.isActionComplete = function isActionComplete() {\n    var _props3 = this.props,\n        duration = _props3.duration,\n        playDirection = _props3.playDirection,\n        yoyo = _props3.yoyo,\n        loop = _props3.loop,\n        flip = _props3.flip;\n    var isComplete = playDirection === 1 ? this.elapsed >= duration : this.elapsed <= 0;\n\n    if (isComplete && (yoyo || loop || flip)) {\n      var isStepTaken = false;\n\n      for (var key in NEXT_STEPS) {\n        var nextStep = NEXT_STEPS[key];\n        var countProp = key + 'Count';\n        var stepMax = this.getProp(key);\n        var stepCount = this.getProp(countProp);\n\n        if (stepMax > stepCount) {\n          var _setProps;\n\n          this.setProps((_setProps = {}, _setProps[countProp] = stepCount + 1, _setProps));\n          nextStep(this);\n          isStepTaken = true;\n        }\n      }\n\n      if (isStepTaken) isComplete = false;\n    }\n\n    return isComplete;\n  };\n\n  Tween.prototype.getElapsed = function getElapsed() {\n    return this.elapsed;\n  };\n\n  Tween.prototype.flip = function flip() {\n    this.elapsed = this.props.duration - this.elapsed;\n    var _ref = [this.props.to, this.props.from];\n    this.props.from = _ref[0];\n    this.props.to = _ref[1];\n    return this;\n  };\n\n  Tween.prototype.reverse = function reverse() {\n    this.props.playDirection *= -1;\n    return this;\n  };\n\n  Tween.prototype.seek = function seek(progress) {\n    var duration = this.props.duration;\n    this.elapsed = (0, _calc.getValueFromProgress)(0, duration, progress);\n    this.isManualUpdate = true;\n    if (!this.isActive()) this.scheduledUpdate();\n  };\n\n  return Tween;\n}(_2.default);\n\nTween.defaultProps = {\n  duration: 300,\n  ease: _easing.easeOut,\n  from: 0,\n  to: 1,\n  flip: 0,\n  flipCount: 0,\n  yoyo: 0,\n  yoyoCount: 0,\n  loop: 0,\n  loopCount: 0,\n  playDirection: 1\n};\n\nexports.default = function (props) {\n  return new Tween(props);\n};","map":{"version":3,"sources":["../../src/actions/tween.js"],"names":["clampProgress","NEXT_STEPS","loop","tween","yoyo","flip","Tween","defaultProps","duration","ease","from","to","flipCount","yoyoCount","loopCount","playDirection","onStart","update","isActionComplete","isComplete","isStepTaken","nextStep","countProp","key","stepMax","stepCount","getElapsed","reverse","seek","progress"],"mappings":"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","sourcesContent":["import Action from './';\nimport { timeSinceLastFrame } from 'framesync';\nimport { clamp } from '../inc/transformers';\nimport { getProgressFromValue, getValueFromProgress } from '../inc/calc';\nimport { easeOut } from '../inc/easing';\n\nconst clampProgress = clamp(0, 1);\n\nconst NEXT_STEPS = {\n  loop: (tween) => tween.start(),\n  yoyo: (tween) => tween.reverse().start(),\n  flip: (tween) => tween.flip().start()\n};\n\nclass Tween extends Action {\n  static defaultProps = {\n    duration: 300,\n    ease: easeOut,\n    from: 0,\n    to: 1,\n    flip: 0,\n    flipCount: 0,\n    yoyo: 0,\n    yoyoCount: 0,\n    loop: 0,\n    loopCount: 0,\n    playDirection: 1\n  };\n\n  onStart() {\n    const { duration, playDirection } = this.props;\n\n    this.elapsed = (playDirection === 1) ? 0 : duration;\n    this.progress = 0;\n  }\n\n  update() {\n    const { duration, ease, from, to, playDirection } = this.props;\n\n    if (!this.isManualUpdate) {\n      this.elapsed += timeSinceLastFrame() * playDirection;\n    }\n\n    this.isManualUpdate = false;\n    this.progress = clampProgress(getProgressFromValue(0, duration, this.elapsed));\n\n    return getValueFromProgress(from, to, ease(this.progress));\n  }\n\n  isActionComplete() {\n    const { duration, playDirection, yoyo, loop, flip } = this.props;\n    let isComplete = (playDirection === 1) ? (this.elapsed >= duration) : (this.elapsed <= 0);\n\n    if (isComplete && (yoyo || loop || flip)) {\n      let isStepTaken = false;\n\n      for (let key in NEXT_STEPS) {\n        const nextStep = NEXT_STEPS[key];\n        const countProp = key + 'Count';\n        const stepMax = this.getProp(key);\n        const stepCount = this.getProp(countProp);\n\n        if (stepMax > stepCount) {\n          this.setProps({\n            [countProp]: stepCount + 1\n          });\n          nextStep(this);\n          isStepTaken = true;\n        }\n      }\n\n      if (isStepTaken) isComplete = false;\n    }\n\n    return isComplete;\n  }\n\n  getElapsed() {\n    return this.elapsed;\n  }\n\n  flip() {\n    this.elapsed = this.props.duration - this.elapsed;\n    [this.props.from, this.props.to] = [this.props.to, this.props.from];\n    return this;\n  }\n\n  reverse() {\n    this.props.playDirection *= -1;\n    return this;\n  }\n\n  seek(progress) {\n    const { duration } = this.props;\n    this.elapsed = getValueFromProgress(0, duration, progress);\n    this.isManualUpdate = true;\n    if (!this.isActive()) this.scheduledUpdate();\n  }\n}\n\nexport default (props) => new Tween(props);\n"]},"metadata":{},"sourceType":"script"}