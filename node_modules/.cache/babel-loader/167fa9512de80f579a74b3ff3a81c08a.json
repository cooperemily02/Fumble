{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _utils = require('../../inc/utils');\n\nvar camelCache = {};\nvar dashCache = {};\nvar prefixes = ['Webkit', 'Moz', 'O', 'ms', ''];\nvar numPrefixes = prefixes.length;\nvar testElement = void 0;\n/*\n  Test style property for prefixed version\n  \n  @param [string]: Style property\n  @return [string]: Cached property name\n*/\n\nvar testPrefix = function testPrefix(key) {\n  testElement = testElement || document.createElement('div');\n\n  for (var i = 0; i < numPrefixes; i++) {\n    var prefix = prefixes[i];\n    var noPrefix = prefix === '';\n    var prefixedPropertyName = noPrefix ? key : prefix + key.charAt(0).toUpperCase() + key.slice(1);\n\n    if (prefixedPropertyName in testElement.style) {\n      camelCache[key] = prefixedPropertyName;\n      dashCache[key] = '' + (noPrefix ? '' : '-') + (0, _utils.camelToDash)(prefixedPropertyName);\n    }\n  }\n};\n\nexports.default = function (key, asDashCase) {\n  var cache = asDashCase ? dashCache : camelCache;\n\n  if (!cache[key]) {\n    testPrefix(key);\n  }\n\n  return cache[key];\n};","map":{"version":3,"sources":["../../../src/renderers/css/prefixer.js"],"names":["camelCache","dashCache","prefixes","numPrefixes","testElement","testPrefix","document","i","prefix","noPrefix","prefixedPropertyName","key","cache","asDashCase"],"mappings":";;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAEA,IAAMA,UAAAA,GAAN,EAAA;AACA,IAAMC,SAAAA,GAAN,EAAA;AACA,IAAMC,QAAAA,GAAW,CAAA,QAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,EAAjB,EAAiB,CAAjB;AACA,IAAMC,WAAAA,GAAcD,QAAAA,CAApB,MAAA;AACA,IAAIE,WAAAA,GAAAA,KAAJ,CAAA;AAEA;;;;;;;AAMA,IAAMC,UAAAA,GAAa,SAAbA,UAAa,CAAA,GAAA,EAAS;AAC1BD,EAAAA,WAAAA,GAAcA,WAAAA,IAAeE,QAAAA,CAAAA,aAAAA,CAA7BF,KAA6BE,CAA7BF;;AAEA,OAAK,IAAIG,CAAAA,GAAT,CAAA,EAAgBA,CAAAA,GAAhB,WAAA,EAAiCA,CAAjC,EAAA,EAAsC;AACpC,QAAMC,MAAAA,GAASN,QAAAA,CAAf,CAAeA,CAAf;AACA,QAAMO,QAAAA,GAAYD,MAAAA,KAAlB,EAAA;AACA,QAAME,oBAAAA,GAAuBD,QAAAA,GAAAA,GAAAA,GAAiBD,MAAAA,GAASG,GAAAA,CAAAA,MAAAA,CAAAA,CAAAA,EAATH,WAASG,EAATH,GAAuCG,GAAAA,CAAAA,KAAAA,CAArF,CAAqFA,CAArF;;AAEA,QAAID,oBAAAA,IAAwBN,WAAAA,CAA5B,KAAA,EAA+C;AAC7CJ,MAAAA,UAAAA,CAAAA,GAAAA,CAAAA,GAAAA,oBAAAA;AACAC,MAAAA,SAAAA,CAAAA,GAAAA,CAAAA,GAAAA,MAAqBQ,QAAAA,GAAAA,EAAAA,GAArBR,GAAAA,IAA4C,CAAA,GAAA,MAAA,CAAA,WAAA,EAA5CA,oBAA4C,CAA5CA;AACD;AACF;AAZH,CAAA;;kBAee,UAAA,GAAA,EAAA,UAAA,EAAqB;AAClC,MAAMW,KAAAA,GAAQC,UAAAA,GAAAA,SAAAA,GAAd,UAAA;;AAEA,MAAI,CAACD,KAAAA,CAAL,GAAKA,CAAL,EAAiB;AACfP,IAAAA,UAAAA,CAAAA,GAAAA,CAAAA;AACD;;AAED,SAAOO,KAAAA,CAAP,GAAOA,CAAP","sourcesContent":["import { camelToDash } from '../../inc/utils';\n\nconst camelCache = {};\nconst dashCache = {};\nconst prefixes = ['Webkit','Moz','O','ms', ''];\nconst numPrefixes = prefixes.length;\nlet testElement;\n\n/*\n  Test style property for prefixed version\n  \n  @param [string]: Style property\n  @return [string]: Cached property name\n*/\nconst testPrefix = (key) => {\n  testElement = testElement || document.createElement('div');\n\n  for (let i = 0; i < numPrefixes; i++) {\n    const prefix = prefixes[i];\n    const noPrefix = (prefix === '');\n    const prefixedPropertyName = noPrefix ? key : prefix + key.charAt(0).toUpperCase() + key.slice(1);\n\n    if (prefixedPropertyName in testElement.style) {\n      camelCache[key] = prefixedPropertyName;\n      dashCache[key] = `${(noPrefix ? '' : '-')}${camelToDash(prefixedPropertyName)}`;\n    }\n  }\n};\n\nexport default (key, asDashCase) => {\n  const cache = asDashCase ? dashCache : camelCache;\n\n  if (!cache[key]) {\n    testPrefix(key);\n  }\n\n  return cache[key];\n};\n"]},"metadata":{},"sourceType":"script"}