{"ast":null,"code":"'use strict';\n\nconst Aspect = require('./operation').Aspect;\n\nconst defineAspects = require('./operation').defineAspects;\n\nconst CommandOperation = require('./command');\n\nconst applyWriteConcern = require('../utils').applyWriteConcern;\n\nconst loadCollection = require('../dynamic_loaders').loadCollection;\n\nconst MongoError = require('../core').MongoError;\n\nconst ReadPreference = require('../core').ReadPreference;\n\nconst ILLEGAL_COMMAND_FIELDS = new Set(['w', 'wtimeout', 'j', 'fsync', 'autoIndexId', 'strict', 'serializeFunctions', 'pkFactory', 'raw', 'readPreference', 'session', 'readConcern', 'writeConcern']);\n\nclass CreateCollectionOperation extends CommandOperation {\n  constructor(db, name, options) {\n    super(db, options);\n    this.name = name;\n  }\n\n  _buildCommand() {\n    const name = this.name;\n    const options = this.options;\n    const cmd = {\n      create: name\n    };\n\n    for (let n in options) {\n      if (options[n] != null && typeof options[n] !== 'function' && !ILLEGAL_COMMAND_FIELDS.has(n)) {\n        cmd[n] = options[n];\n      }\n    }\n\n    return cmd;\n  }\n\n  execute(callback) {\n    const db = this.db;\n    const name = this.name;\n    const options = this.options;\n    const Collection = loadCollection();\n    let listCollectionOptions = Object.assign({\n      nameOnly: true,\n      strict: false\n    }, options);\n    listCollectionOptions = applyWriteConcern(listCollectionOptions, {\n      db\n    }, listCollectionOptions);\n\n    function done(err) {\n      if (err) {\n        return callback(err);\n      }\n\n      try {\n        callback(null, new Collection(db, db.s.topology, db.databaseName, name, db.s.pkFactory, options));\n      } catch (err) {\n        callback(err);\n      }\n    }\n\n    const strictMode = listCollectionOptions.strict;\n\n    if (strictMode) {\n      db.listCollections({\n        name\n      }, listCollectionOptions).setReadPreference(ReadPreference.PRIMARY).toArray((err, collections) => {\n        if (err) {\n          return callback(err);\n        }\n\n        if (collections.length > 0) {\n          return callback(new MongoError(`Collection ${name} already exists. Currently in strict mode.`));\n        }\n\n        super.execute(done);\n      });\n      return;\n    } // otherwise just execute the command\n\n\n    super.execute(done);\n  }\n\n}\n\ndefineAspects(CreateCollectionOperation, Aspect.WRITE_OPERATION);\nmodule.exports = CreateCollectionOperation;","map":null,"metadata":{},"sourceType":"script"}