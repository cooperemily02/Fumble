{"ast":null,"code":"'use strict';\n\nconst OperationBase = require('./operation').OperationBase;\n\nconst handleCallback = require('../utils').handleCallback;\n\nconst indexInformationDb = require('./db_ops').indexInformation;\n\nclass IndexExistsOperation extends OperationBase {\n  constructor(collection, indexes, options) {\n    super(options);\n    this.collection = collection;\n    this.indexes = indexes;\n  }\n\n  execute(callback) {\n    const coll = this.collection;\n    const indexes = this.indexes;\n    const options = this.options;\n    indexInformationDb(coll.s.db, coll.collectionName, options, (err, indexInformation) => {\n      // If we have an error return\n      if (err != null) return handleCallback(callback, err, null); // Let's check for the index names\n\n      if (!Array.isArray(indexes)) return handleCallback(callback, null, indexInformation[indexes] != null); // Check in list of indexes\n\n      for (let i = 0; i < indexes.length; i++) {\n        if (indexInformation[indexes[i]] == null) {\n          return handleCallback(callback, null, false);\n        }\n      } // All keys found return true\n\n\n      return handleCallback(callback, null, true);\n    });\n  }\n\n}\n\nmodule.exports = IndexExistsOperation;","map":null,"metadata":{},"sourceType":"script"}