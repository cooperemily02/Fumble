{"ast":null,"code":"'use strict';\n\nconst Aspect = require('./operation').Aspect;\n\nconst CommandOperation = require('./command');\n\nconst defineAspects = require('./operation').defineAspects;\n\nconst handleCallback = require('../utils').handleCallback;\n\nclass DropOperation extends CommandOperation {\n  constructor(db, options) {\n    const finalOptions = Object.assign({}, options, db.s.options);\n\n    if (options.session) {\n      finalOptions.session = options.session;\n    }\n\n    super(db, finalOptions);\n  }\n\n  execute(callback) {\n    super.execute((err, result) => {\n      if (err) return handleCallback(callback, err);\n      if (result.ok) return handleCallback(callback, null, true);\n      handleCallback(callback, null, false);\n    });\n  }\n\n}\n\ndefineAspects(DropOperation, Aspect.WRITE_OPERATION);\n\nclass DropCollectionOperation extends DropOperation {\n  constructor(db, name, options) {\n    super(db, options);\n    this.name = name;\n    this.namespace = `${db.namespace}.${name}`;\n  }\n\n  _buildCommand() {\n    return {\n      drop: this.name\n    };\n  }\n\n}\n\nclass DropDatabaseOperation extends DropOperation {\n  _buildCommand() {\n    return {\n      dropDatabase: 1\n    };\n  }\n\n}\n\nmodule.exports = {\n  DropOperation,\n  DropCollectionOperation,\n  DropDatabaseOperation\n};","map":null,"metadata":{},"sourceType":"script"}